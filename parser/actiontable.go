// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(2), // ␚, reduce: Statements
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(25), // !
			shift(26), // (
			nil,       // )
			shift(27), // id
			shift(28), // int_lit
			shift(29), // string_lit
			shift(30), // true
			shift(31), // false
			shift(32), // nil
			nil,       // ,
			shift(33), // var
			nil,       // =
			nil,       // {
			nil,       // }
			shift(34), // if
			nil,       // else
			shift(35), // while
			shift(36), // break
			shift(37), // func
			shift(38), // return
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // ␚
			nil,          // empty
			nil,          // and
			nil,          // or
			nil,          // +
			nil,          // -
			nil,          // *
			nil,          // /
			nil,          // !
			nil,          // (
			nil,          // )
			nil,          // id
			nil,          // int_lit
			nil,          // string_lit
			nil,          // true
			nil,          // false
			nil,          // nil
			nil,          // ,
			nil,          // var
			nil,          // =
			nil,          // {
			nil,          // }
			nil,          // if
			nil,          // else
			nil,          // while
			nil,          // break
			nil,          // func
			nil,          // return
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // ␚, reduce: Module
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // !
			nil,       // (
			nil,       // )
			nil,       // id
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			nil,       // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(3), // ␚, reduce: Statements
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(25), // !
			shift(26), // (
			nil,       // )
			shift(27), // id
			shift(28), // int_lit
			shift(29), // string_lit
			shift(30), // true
			shift(31), // false
			shift(32), // nil
			nil,       // ,
			shift(33), // var
			nil,       // =
			nil,       // {
			nil,       // }
			shift(34), // if
			nil,       // else
			shift(35), // while
			shift(36), // break
			shift(37), // func
			shift(38), // return
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(4), // ␚, reduce: StatementList
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			reduce(4), // !, reduce: StatementList
			reduce(4), // (, reduce: StatementList
			nil,       // )
			reduce(4), // id, reduce: StatementList
			reduce(4), // int_lit, reduce: StatementList
			reduce(4), // string_lit, reduce: StatementList
			reduce(4), // true, reduce: StatementList
			reduce(4), // false, reduce: StatementList
			reduce(4), // nil, reduce: StatementList
			nil,       // ,
			reduce(4), // var, reduce: StatementList
			nil,       // =
			nil,       // {
			nil,       // }
			reduce(4), // if, reduce: StatementList
			nil,       // else
			reduce(4), // while, reduce: StatementList
			reduce(4), // break, reduce: StatementList
			reduce(4), // func, reduce: StatementList
			reduce(4), // return, reduce: StatementList
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(6), // ␚, reduce: Statement
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			reduce(6), // !, reduce: Statement
			reduce(6), // (, reduce: Statement
			nil,       // )
			reduce(6), // id, reduce: Statement
			reduce(6), // int_lit, reduce: Statement
			reduce(6), // string_lit, reduce: Statement
			reduce(6), // true, reduce: Statement
			reduce(6), // false, reduce: Statement
			reduce(6), // nil, reduce: Statement
			nil,       // ,
			reduce(6), // var, reduce: Statement
			nil,       // =
			nil,       // {
			nil,       // }
			reduce(6), // if, reduce: Statement
			nil,       // else
			reduce(6), // while, reduce: Statement
			reduce(6), // break, reduce: Statement
			reduce(6), // func, reduce: Statement
			reduce(6), // return, reduce: Statement
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(7), // ␚, reduce: Statement
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			reduce(7), // !, reduce: Statement
			reduce(7), // (, reduce: Statement
			nil,       // )
			reduce(7), // id, reduce: Statement
			reduce(7), // int_lit, reduce: Statement
			reduce(7), // string_lit, reduce: Statement
			reduce(7), // true, reduce: Statement
			reduce(7), // false, reduce: Statement
			reduce(7), // nil, reduce: Statement
			nil,       // ,
			reduce(7), // var, reduce: Statement
			nil,       // =
			nil,       // {
			nil,       // }
			reduce(7), // if, reduce: Statement
			nil,       // else
			reduce(7), // while, reduce: Statement
			reduce(7), // break, reduce: Statement
			reduce(7), // func, reduce: Statement
			reduce(7), // return, reduce: Statement
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(8), // ␚, reduce: Statement
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			reduce(8), // !, reduce: Statement
			reduce(8), // (, reduce: Statement
			nil,       // )
			reduce(8), // id, reduce: Statement
			reduce(8), // int_lit, reduce: Statement
			reduce(8), // string_lit, reduce: Statement
			reduce(8), // true, reduce: Statement
			reduce(8), // false, reduce: Statement
			reduce(8), // nil, reduce: Statement
			nil,       // ,
			reduce(8), // var, reduce: Statement
			nil,       // =
			nil,       // {
			nil,       // }
			reduce(8), // if, reduce: Statement
			nil,       // else
			reduce(8), // while, reduce: Statement
			reduce(8), // break, reduce: Statement
			reduce(8), // func, reduce: Statement
			reduce(8), // return, reduce: Statement
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(9), // ␚, reduce: Statement
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			reduce(9), // !, reduce: Statement
			reduce(9), // (, reduce: Statement
			nil,       // )
			reduce(9), // id, reduce: Statement
			reduce(9), // int_lit, reduce: Statement
			reduce(9), // string_lit, reduce: Statement
			reduce(9), // true, reduce: Statement
			reduce(9), // false, reduce: Statement
			reduce(9), // nil, reduce: Statement
			nil,       // ,
			reduce(9), // var, reduce: Statement
			nil,       // =
			nil,       // {
			nil,       // }
			reduce(9), // if, reduce: Statement
			nil,       // else
			reduce(9), // while, reduce: Statement
			reduce(9), // break, reduce: Statement
			reduce(9), // func, reduce: Statement
			reduce(9), // return, reduce: Statement
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(10), // ␚, reduce: Statement
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(10), // !, reduce: Statement
			reduce(10), // (, reduce: Statement
			nil,        // )
			reduce(10), // id, reduce: Statement
			reduce(10), // int_lit, reduce: Statement
			reduce(10), // string_lit, reduce: Statement
			reduce(10), // true, reduce: Statement
			reduce(10), // false, reduce: Statement
			reduce(10), // nil, reduce: Statement
			nil,        // ,
			reduce(10), // var, reduce: Statement
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(10), // if, reduce: Statement
			nil,        // else
			reduce(10), // while, reduce: Statement
			reduce(10), // break, reduce: Statement
			reduce(10), // func, reduce: Statement
			reduce(10), // return, reduce: Statement
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(11), // ␚, reduce: Statement
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(11), // !, reduce: Statement
			reduce(11), // (, reduce: Statement
			nil,        // )
			reduce(11), // id, reduce: Statement
			reduce(11), // int_lit, reduce: Statement
			reduce(11), // string_lit, reduce: Statement
			reduce(11), // true, reduce: Statement
			reduce(11), // false, reduce: Statement
			reduce(11), // nil, reduce: Statement
			nil,        // ,
			reduce(11), // var, reduce: Statement
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(11), // if, reduce: Statement
			nil,        // else
			reduce(11), // while, reduce: Statement
			reduce(11), // break, reduce: Statement
			reduce(11), // func, reduce: Statement
			reduce(11), // return, reduce: Statement
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(12), // ␚, reduce: Statement
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(12), // !, reduce: Statement
			reduce(12), // (, reduce: Statement
			nil,        // )
			reduce(12), // id, reduce: Statement
			reduce(12), // int_lit, reduce: Statement
			reduce(12), // string_lit, reduce: Statement
			reduce(12), // true, reduce: Statement
			reduce(12), // false, reduce: Statement
			reduce(12), // nil, reduce: Statement
			nil,        // ,
			reduce(12), // var, reduce: Statement
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(12), // if, reduce: Statement
			nil,        // else
			reduce(12), // while, reduce: Statement
			reduce(12), // break, reduce: Statement
			reduce(12), // func, reduce: Statement
			reduce(12), // return, reduce: Statement
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(13), // ␚, reduce: Statement
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(13), // !, reduce: Statement
			reduce(13), // (, reduce: Statement
			nil,        // )
			reduce(13), // id, reduce: Statement
			reduce(13), // int_lit, reduce: Statement
			reduce(13), // string_lit, reduce: Statement
			reduce(13), // true, reduce: Statement
			reduce(13), // false, reduce: Statement
			reduce(13), // nil, reduce: Statement
			nil,        // ,
			reduce(13), // var, reduce: Statement
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(13), // if, reduce: Statement
			nil,        // else
			reduce(13), // while, reduce: Statement
			reduce(13), // break, reduce: Statement
			reduce(13), // func, reduce: Statement
			reduce(13), // return, reduce: Statement
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(14), // ␚, reduce: Statement
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(14), // !, reduce: Statement
			reduce(14), // (, reduce: Statement
			nil,        // )
			reduce(14), // id, reduce: Statement
			reduce(14), // int_lit, reduce: Statement
			reduce(14), // string_lit, reduce: Statement
			reduce(14), // true, reduce: Statement
			reduce(14), // false, reduce: Statement
			reduce(14), // nil, reduce: Statement
			nil,        // ,
			reduce(14), // var, reduce: Statement
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(14), // if, reduce: Statement
			nil,        // else
			reduce(14), // while, reduce: Statement
			reduce(14), // break, reduce: Statement
			reduce(14), // func, reduce: Statement
			reduce(14), // return, reduce: Statement
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(17), // ␚, reduce: Expression
			nil,        // empty
			shift(40),  // and
			shift(41),  // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(17), // !, reduce: Expression
			reduce(17), // (, reduce: Expression
			nil,        // )
			reduce(17), // id, reduce: Expression
			reduce(17), // int_lit, reduce: Expression
			reduce(17), // string_lit, reduce: Expression
			reduce(17), // true, reduce: Expression
			reduce(17), // false, reduce: Expression
			reduce(17), // nil, reduce: Expression
			nil,        // ,
			reduce(17), // var, reduce: Expression
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(17), // if, reduce: Expression
			nil,        // else
			reduce(17), // while, reduce: Expression
			reduce(17), // break, reduce: Expression
			reduce(17), // func, reduce: Expression
			reduce(17), // return, reduce: Expression
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(18), // ␚, reduce: Expression1
			nil,        // empty
			reduce(18), // and, reduce: Expression1
			reduce(18), // or, reduce: Expression1
			shift(42),  // +
			shift(43),  // -
			nil,        // *
			nil,        // /
			reduce(18), // !, reduce: Expression1
			reduce(18), // (, reduce: Expression1
			nil,        // )
			reduce(18), // id, reduce: Expression1
			reduce(18), // int_lit, reduce: Expression1
			reduce(18), // string_lit, reduce: Expression1
			reduce(18), // true, reduce: Expression1
			reduce(18), // false, reduce: Expression1
			reduce(18), // nil, reduce: Expression1
			nil,        // ,
			reduce(18), // var, reduce: Expression1
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(18), // if, reduce: Expression1
			nil,        // else
			reduce(18), // while, reduce: Expression1
			reduce(18), // break, reduce: Expression1
			reduce(18), // func, reduce: Expression1
			reduce(18), // return, reduce: Expression1
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(21), // ␚, reduce: Expression2
			nil,        // empty
			reduce(21), // and, reduce: Expression2
			reduce(21), // or, reduce: Expression2
			reduce(21), // +, reduce: Expression2
			reduce(21), // -, reduce: Expression2
			shift(44),  // *
			shift(45),  // /
			reduce(21), // !, reduce: Expression2
			reduce(21), // (, reduce: Expression2
			nil,        // )
			reduce(21), // id, reduce: Expression2
			reduce(21), // int_lit, reduce: Expression2
			reduce(21), // string_lit, reduce: Expression2
			reduce(21), // true, reduce: Expression2
			reduce(21), // false, reduce: Expression2
			reduce(21), // nil, reduce: Expression2
			nil,        // ,
			reduce(21), // var, reduce: Expression2
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(21), // if, reduce: Expression2
			nil,        // else
			reduce(21), // while, reduce: Expression2
			reduce(21), // break, reduce: Expression2
			reduce(21), // func, reduce: Expression2
			reduce(21), // return, reduce: Expression2
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(24), // ␚, reduce: Expression3
			nil,        // empty
			reduce(24), // and, reduce: Expression3
			reduce(24), // or, reduce: Expression3
			reduce(24), // +, reduce: Expression3
			reduce(24), // -, reduce: Expression3
			reduce(24), // *, reduce: Expression3
			reduce(24), // /, reduce: Expression3
			reduce(24), // !, reduce: Expression3
			reduce(24), // (, reduce: Expression3
			nil,        // )
			reduce(24), // id, reduce: Expression3
			reduce(24), // int_lit, reduce: Expression3
			reduce(24), // string_lit, reduce: Expression3
			reduce(24), // true, reduce: Expression3
			reduce(24), // false, reduce: Expression3
			reduce(24), // nil, reduce: Expression3
			nil,        // ,
			reduce(24), // var, reduce: Expression3
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(24), // if, reduce: Expression3
			nil,        // else
			reduce(24), // while, reduce: Expression3
			reduce(24), // break, reduce: Expression3
			reduce(24), // func, reduce: Expression3
			reduce(24), // return, reduce: Expression3
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(27), // ␚, reduce: Expression4
			nil,        // empty
			reduce(27), // and, reduce: Expression4
			reduce(27), // or, reduce: Expression4
			reduce(27), // +, reduce: Expression4
			reduce(27), // -, reduce: Expression4
			reduce(27), // *, reduce: Expression4
			reduce(27), // /, reduce: Expression4
			reduce(27), // !, reduce: Expression4
			reduce(27), // (, reduce: Expression4
			nil,        // )
			reduce(27), // id, reduce: Expression4
			reduce(27), // int_lit, reduce: Expression4
			reduce(27), // string_lit, reduce: Expression4
			reduce(27), // true, reduce: Expression4
			reduce(27), // false, reduce: Expression4
			reduce(27), // nil, reduce: Expression4
			nil,        // ,
			reduce(27), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(27), // if, reduce: Expression4
			nil,        // else
			reduce(27), // while, reduce: Expression4
			reduce(27), // break, reduce: Expression4
			reduce(27), // func, reduce: Expression4
			reduce(27), // return, reduce: Expression4
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(28), // ␚, reduce: Expression4
			nil,        // empty
			reduce(28), // and, reduce: Expression4
			reduce(28), // or, reduce: Expression4
			reduce(28), // +, reduce: Expression4
			reduce(28), // -, reduce: Expression4
			reduce(28), // *, reduce: Expression4
			reduce(28), // /, reduce: Expression4
			reduce(28), // !, reduce: Expression4
			reduce(28), // (, reduce: Expression4
			nil,        // )
			reduce(28), // id, reduce: Expression4
			reduce(28), // int_lit, reduce: Expression4
			reduce(28), // string_lit, reduce: Expression4
			reduce(28), // true, reduce: Expression4
			reduce(28), // false, reduce: Expression4
			reduce(28), // nil, reduce: Expression4
			nil,        // ,
			reduce(28), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(28), // if, reduce: Expression4
			nil,        // else
			reduce(28), // while, reduce: Expression4
			reduce(28), // break, reduce: Expression4
			reduce(28), // func, reduce: Expression4
			reduce(28), // return, reduce: Expression4
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(29), // ␚, reduce: Expression4
			nil,        // empty
			reduce(29), // and, reduce: Expression4
			reduce(29), // or, reduce: Expression4
			reduce(29), // +, reduce: Expression4
			reduce(29), // -, reduce: Expression4
			reduce(29), // *, reduce: Expression4
			reduce(29), // /, reduce: Expression4
			reduce(29), // !, reduce: Expression4
			reduce(29), // (, reduce: Expression4
			nil,        // )
			reduce(29), // id, reduce: Expression4
			reduce(29), // int_lit, reduce: Expression4
			reduce(29), // string_lit, reduce: Expression4
			reduce(29), // true, reduce: Expression4
			reduce(29), // false, reduce: Expression4
			reduce(29), // nil, reduce: Expression4
			nil,        // ,
			reduce(29), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(29), // if, reduce: Expression4
			nil,        // else
			reduce(29), // while, reduce: Expression4
			reduce(29), // break, reduce: Expression4
			reduce(29), // func, reduce: Expression4
			reduce(29), // return, reduce: Expression4
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(30), // ␚, reduce: Expression4
			nil,        // empty
			reduce(30), // and, reduce: Expression4
			reduce(30), // or, reduce: Expression4
			reduce(30), // +, reduce: Expression4
			reduce(30), // -, reduce: Expression4
			reduce(30), // *, reduce: Expression4
			reduce(30), // /, reduce: Expression4
			reduce(30), // !, reduce: Expression4
			reduce(30), // (, reduce: Expression4
			nil,        // )
			reduce(30), // id, reduce: Expression4
			reduce(30), // int_lit, reduce: Expression4
			reduce(30), // string_lit, reduce: Expression4
			reduce(30), // true, reduce: Expression4
			reduce(30), // false, reduce: Expression4
			reduce(30), // nil, reduce: Expression4
			nil,        // ,
			reduce(30), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(30), // if, reduce: Expression4
			nil,        // else
			reduce(30), // while, reduce: Expression4
			reduce(30), // break, reduce: Expression4
			reduce(30), // func, reduce: Expression4
			reduce(30), // return, reduce: Expression4
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(31), // ␚, reduce: Expression4
			nil,        // empty
			reduce(31), // and, reduce: Expression4
			reduce(31), // or, reduce: Expression4
			reduce(31), // +, reduce: Expression4
			reduce(31), // -, reduce: Expression4
			reduce(31), // *, reduce: Expression4
			reduce(31), // /, reduce: Expression4
			reduce(31), // !, reduce: Expression4
			reduce(31), // (, reduce: Expression4
			nil,        // )
			reduce(31), // id, reduce: Expression4
			reduce(31), // int_lit, reduce: Expression4
			reduce(31), // string_lit, reduce: Expression4
			reduce(31), // true, reduce: Expression4
			reduce(31), // false, reduce: Expression4
			reduce(31), // nil, reduce: Expression4
			nil,        // ,
			reduce(31), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(31), // if, reduce: Expression4
			nil,        // else
			reduce(31), // while, reduce: Expression4
			reduce(31), // break, reduce: Expression4
			reduce(31), // func, reduce: Expression4
			reduce(31), // return, reduce: Expression4
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(32), // ␚, reduce: Expression4
			nil,        // empty
			reduce(32), // and, reduce: Expression4
			reduce(32), // or, reduce: Expression4
			reduce(32), // +, reduce: Expression4
			reduce(32), // -, reduce: Expression4
			reduce(32), // *, reduce: Expression4
			reduce(32), // /, reduce: Expression4
			reduce(32), // !, reduce: Expression4
			reduce(32), // (, reduce: Expression4
			nil,        // )
			reduce(32), // id, reduce: Expression4
			reduce(32), // int_lit, reduce: Expression4
			reduce(32), // string_lit, reduce: Expression4
			reduce(32), // true, reduce: Expression4
			reduce(32), // false, reduce: Expression4
			reduce(32), // nil, reduce: Expression4
			nil,        // ,
			reduce(32), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(32), // if, reduce: Expression4
			nil,        // else
			reduce(32), // while, reduce: Expression4
			reduce(32), // break, reduce: Expression4
			reduce(32), // func, reduce: Expression4
			reduce(32), // return, reduce: Expression4
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(33), // ␚, reduce: Expression4
			nil,        // empty
			reduce(33), // and, reduce: Expression4
			reduce(33), // or, reduce: Expression4
			reduce(33), // +, reduce: Expression4
			reduce(33), // -, reduce: Expression4
			reduce(33), // *, reduce: Expression4
			reduce(33), // /, reduce: Expression4
			reduce(33), // !, reduce: Expression4
			reduce(33), // (, reduce: Expression4
			nil,        // )
			reduce(33), // id, reduce: Expression4
			reduce(33), // int_lit, reduce: Expression4
			reduce(33), // string_lit, reduce: Expression4
			reduce(33), // true, reduce: Expression4
			reduce(33), // false, reduce: Expression4
			reduce(33), // nil, reduce: Expression4
			nil,        // ,
			reduce(33), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(33), // if, reduce: Expression4
			nil,        // else
			reduce(33), // while, reduce: Expression4
			reduce(33), // break, reduce: Expression4
			reduce(33), // func, reduce: Expression4
			reduce(33), // return, reduce: Expression4
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(25), // !
			shift(26), // (
			nil,       // )
			shift(47), // id
			shift(28), // int_lit
			shift(29), // string_lit
			shift(30), // true
			shift(31), // false
			shift(32), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // !
			shift(61), // (
			nil,       // )
			shift(62), // id
			shift(63), // int_lit
			shift(64), // string_lit
			shift(65), // true
			shift(66), // false
			shift(67), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(36), // ␚, reduce: Identifier
			nil,        // empty
			reduce(36), // and, reduce: Identifier
			reduce(36), // or, reduce: Identifier
			reduce(36), // +, reduce: Identifier
			reduce(36), // -, reduce: Identifier
			reduce(36), // *, reduce: Identifier
			reduce(36), // /, reduce: Identifier
			reduce(36), // !, reduce: Identifier
			shift(68),  // (
			nil,        // )
			reduce(36), // id, reduce: Identifier
			reduce(36), // int_lit, reduce: Identifier
			reduce(36), // string_lit, reduce: Identifier
			reduce(36), // true, reduce: Identifier
			reduce(36), // false, reduce: Identifier
			reduce(36), // nil, reduce: Identifier
			nil,        // ,
			reduce(36), // var, reduce: Identifier
			shift(69),  // =
			nil,        // {
			nil,        // }
			reduce(36), // if, reduce: Identifier
			nil,        // else
			reduce(36), // while, reduce: Identifier
			reduce(36), // break, reduce: Identifier
			reduce(36), // func, reduce: Identifier
			reduce(36), // return, reduce: Identifier
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(37), // ␚, reduce: IntegerLiteral
			nil,        // empty
			reduce(37), // and, reduce: IntegerLiteral
			reduce(37), // or, reduce: IntegerLiteral
			reduce(37), // +, reduce: IntegerLiteral
			reduce(37), // -, reduce: IntegerLiteral
			reduce(37), // *, reduce: IntegerLiteral
			reduce(37), // /, reduce: IntegerLiteral
			reduce(37), // !, reduce: IntegerLiteral
			reduce(37), // (, reduce: IntegerLiteral
			nil,        // )
			reduce(37), // id, reduce: IntegerLiteral
			reduce(37), // int_lit, reduce: IntegerLiteral
			reduce(37), // string_lit, reduce: IntegerLiteral
			reduce(37), // true, reduce: IntegerLiteral
			reduce(37), // false, reduce: IntegerLiteral
			reduce(37), // nil, reduce: IntegerLiteral
			nil,        // ,
			reduce(37), // var, reduce: IntegerLiteral
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(37), // if, reduce: IntegerLiteral
			nil,        // else
			reduce(37), // while, reduce: IntegerLiteral
			reduce(37), // break, reduce: IntegerLiteral
			reduce(37), // func, reduce: IntegerLiteral
			reduce(37), // return, reduce: IntegerLiteral
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(38), // ␚, reduce: StringLiteral
			nil,        // empty
			reduce(38), // and, reduce: StringLiteral
			reduce(38), // or, reduce: StringLiteral
			reduce(38), // +, reduce: StringLiteral
			reduce(38), // -, reduce: StringLiteral
			reduce(38), // *, reduce: StringLiteral
			reduce(38), // /, reduce: StringLiteral
			reduce(38), // !, reduce: StringLiteral
			reduce(38), // (, reduce: StringLiteral
			nil,        // )
			reduce(38), // id, reduce: StringLiteral
			reduce(38), // int_lit, reduce: StringLiteral
			reduce(38), // string_lit, reduce: StringLiteral
			reduce(38), // true, reduce: StringLiteral
			reduce(38), // false, reduce: StringLiteral
			reduce(38), // nil, reduce: StringLiteral
			nil,        // ,
			reduce(38), // var, reduce: StringLiteral
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(38), // if, reduce: StringLiteral
			nil,        // else
			reduce(38), // while, reduce: StringLiteral
			reduce(38), // break, reduce: StringLiteral
			reduce(38), // func, reduce: StringLiteral
			reduce(38), // return, reduce: StringLiteral
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(39), // ␚, reduce: TrueLiteral
			nil,        // empty
			reduce(39), // and, reduce: TrueLiteral
			reduce(39), // or, reduce: TrueLiteral
			reduce(39), // +, reduce: TrueLiteral
			reduce(39), // -, reduce: TrueLiteral
			reduce(39), // *, reduce: TrueLiteral
			reduce(39), // /, reduce: TrueLiteral
			reduce(39), // !, reduce: TrueLiteral
			reduce(39), // (, reduce: TrueLiteral
			nil,        // )
			reduce(39), // id, reduce: TrueLiteral
			reduce(39), // int_lit, reduce: TrueLiteral
			reduce(39), // string_lit, reduce: TrueLiteral
			reduce(39), // true, reduce: TrueLiteral
			reduce(39), // false, reduce: TrueLiteral
			reduce(39), // nil, reduce: TrueLiteral
			nil,        // ,
			reduce(39), // var, reduce: TrueLiteral
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(39), // if, reduce: TrueLiteral
			nil,        // else
			reduce(39), // while, reduce: TrueLiteral
			reduce(39), // break, reduce: TrueLiteral
			reduce(39), // func, reduce: TrueLiteral
			reduce(39), // return, reduce: TrueLiteral
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(40), // ␚, reduce: FalseLiteral
			nil,        // empty
			reduce(40), // and, reduce: FalseLiteral
			reduce(40), // or, reduce: FalseLiteral
			reduce(40), // +, reduce: FalseLiteral
			reduce(40), // -, reduce: FalseLiteral
			reduce(40), // *, reduce: FalseLiteral
			reduce(40), // /, reduce: FalseLiteral
			reduce(40), // !, reduce: FalseLiteral
			reduce(40), // (, reduce: FalseLiteral
			nil,        // )
			reduce(40), // id, reduce: FalseLiteral
			reduce(40), // int_lit, reduce: FalseLiteral
			reduce(40), // string_lit, reduce: FalseLiteral
			reduce(40), // true, reduce: FalseLiteral
			reduce(40), // false, reduce: FalseLiteral
			reduce(40), // nil, reduce: FalseLiteral
			nil,        // ,
			reduce(40), // var, reduce: FalseLiteral
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(40), // if, reduce: FalseLiteral
			nil,        // else
			reduce(40), // while, reduce: FalseLiteral
			reduce(40), // break, reduce: FalseLiteral
			reduce(40), // func, reduce: FalseLiteral
			reduce(40), // return, reduce: FalseLiteral
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(41), // ␚, reduce: NilLiteral
			nil,        // empty
			reduce(41), // and, reduce: NilLiteral
			reduce(41), // or, reduce: NilLiteral
			reduce(41), // +, reduce: NilLiteral
			reduce(41), // -, reduce: NilLiteral
			reduce(41), // *, reduce: NilLiteral
			reduce(41), // /, reduce: NilLiteral
			reduce(41), // !, reduce: NilLiteral
			reduce(41), // (, reduce: NilLiteral
			nil,        // )
			reduce(41), // id, reduce: NilLiteral
			reduce(41), // int_lit, reduce: NilLiteral
			reduce(41), // string_lit, reduce: NilLiteral
			reduce(41), // true, reduce: NilLiteral
			reduce(41), // false, reduce: NilLiteral
			reduce(41), // nil, reduce: NilLiteral
			nil,        // ,
			reduce(41), // var, reduce: NilLiteral
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(41), // if, reduce: NilLiteral
			nil,        // else
			reduce(41), // while, reduce: NilLiteral
			reduce(41), // break, reduce: NilLiteral
			reduce(41), // func, reduce: NilLiteral
			reduce(41), // return, reduce: NilLiteral
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // !
			nil,       // (
			nil,       // )
			shift(70), // id
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			nil,       // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(83), // !
			shift(84), // (
			nil,       // )
			shift(85), // id
			shift(86), // int_lit
			shift(87), // string_lit
			shift(88), // true
			shift(89), // false
			shift(90), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(83), // !
			shift(84), // (
			nil,       // )
			shift(85), // id
			shift(86), // int_lit
			shift(87), // string_lit
			shift(88), // true
			shift(89), // false
			shift(90), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(56), // ␚, reduce: Break
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(56), // !, reduce: Break
			reduce(56), // (, reduce: Break
			nil,        // )
			reduce(56), // id, reduce: Break
			reduce(56), // int_lit, reduce: Break
			reduce(56), // string_lit, reduce: Break
			reduce(56), // true, reduce: Break
			reduce(56), // false, reduce: Break
			reduce(56), // nil, reduce: Break
			nil,        // ,
			reduce(56), // var, reduce: Break
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(56), // if, reduce: Break
			nil,        // else
			reduce(56), // while, reduce: Break
			reduce(56), // break, reduce: Break
			reduce(56), // func, reduce: Break
			reduce(56), // return, reduce: Break
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // !
			nil,       // (
			nil,       // )
			shift(93), // id
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			nil,       // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(25), // !
			shift(26), // (
			nil,       // )
			shift(47), // id
			shift(28), // int_lit
			shift(29), // string_lit
			shift(30), // true
			shift(31), // false
			shift(32), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(5), // ␚, reduce: StatementList
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			reduce(5), // !, reduce: StatementList
			reduce(5), // (, reduce: StatementList
			nil,       // )
			reduce(5), // id, reduce: StatementList
			reduce(5), // int_lit, reduce: StatementList
			reduce(5), // string_lit, reduce: StatementList
			reduce(5), // true, reduce: StatementList
			reduce(5), // false, reduce: StatementList
			reduce(5), // nil, reduce: StatementList
			nil,       // ,
			reduce(5), // var, reduce: StatementList
			nil,       // =
			nil,       // {
			nil,       // }
			reduce(5), // if, reduce: StatementList
			nil,       // else
			reduce(5), // while, reduce: StatementList
			reduce(5), // break, reduce: StatementList
			reduce(5), // func, reduce: StatementList
			reduce(5), // return, reduce: StatementList
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(25), // !
			shift(26), // (
			nil,       // )
			shift(47), // id
			shift(28), // int_lit
			shift(29), // string_lit
			shift(30), // true
			shift(31), // false
			shift(32), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(25), // !
			shift(26), // (
			nil,       // )
			shift(47), // id
			shift(28), // int_lit
			shift(29), // string_lit
			shift(30), // true
			shift(31), // false
			shift(32), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(25), // !
			shift(26), // (
			nil,       // )
			shift(47), // id
			shift(28), // int_lit
			shift(29), // string_lit
			shift(30), // true
			shift(31), // false
			shift(32), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(25), // !
			shift(26), // (
			nil,       // )
			shift(47), // id
			shift(28), // int_lit
			shift(29), // string_lit
			shift(30), // true
			shift(31), // false
			shift(32), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(25), // !
			shift(26), // (
			nil,       // )
			shift(47), // id
			shift(28), // int_lit
			shift(29), // string_lit
			shift(30), // true
			shift(31), // false
			shift(32), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(25), // !
			shift(26), // (
			nil,       // )
			shift(47), // id
			shift(28), // int_lit
			shift(29), // string_lit
			shift(30), // true
			shift(31), // false
			shift(32), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(34), // ␚, reduce: Expression4
			nil,        // empty
			reduce(34), // and, reduce: Expression4
			reduce(34), // or, reduce: Expression4
			reduce(34), // +, reduce: Expression4
			reduce(34), // -, reduce: Expression4
			reduce(34), // *, reduce: Expression4
			reduce(34), // /, reduce: Expression4
			reduce(34), // !, reduce: Expression4
			reduce(34), // (, reduce: Expression4
			nil,        // )
			reduce(34), // id, reduce: Expression4
			reduce(34), // int_lit, reduce: Expression4
			reduce(34), // string_lit, reduce: Expression4
			reduce(34), // true, reduce: Expression4
			reduce(34), // false, reduce: Expression4
			reduce(34), // nil, reduce: Expression4
			nil,        // ,
			reduce(34), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(34), // if, reduce: Expression4
			nil,        // else
			reduce(34), // while, reduce: Expression4
			reduce(34), // break, reduce: Expression4
			reduce(34), // func, reduce: Expression4
			reduce(34), // return, reduce: Expression4
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(36), // ␚, reduce: Identifier
			nil,        // empty
			reduce(36), // and, reduce: Identifier
			reduce(36), // or, reduce: Identifier
			reduce(36), // +, reduce: Identifier
			reduce(36), // -, reduce: Identifier
			reduce(36), // *, reduce: Identifier
			reduce(36), // /, reduce: Identifier
			reduce(36), // !, reduce: Identifier
			shift(68),  // (
			nil,        // )
			reduce(36), // id, reduce: Identifier
			reduce(36), // int_lit, reduce: Identifier
			reduce(36), // string_lit, reduce: Identifier
			reduce(36), // true, reduce: Identifier
			reduce(36), // false, reduce: Identifier
			reduce(36), // nil, reduce: Identifier
			nil,        // ,
			reduce(36), // var, reduce: Identifier
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(36), // if, reduce: Identifier
			nil,        // else
			reduce(36), // while, reduce: Identifier
			reduce(36), // break, reduce: Identifier
			reduce(36), // func, reduce: Identifier
			reduce(36), // return, reduce: Identifier
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			shift(101), // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(102), // and
			shift(103), // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			reduce(17), // ), reduce: Expression
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(18), // and, reduce: Expression1
			reduce(18), // or, reduce: Expression1
			shift(104), // +
			shift(105), // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			reduce(18), // ), reduce: Expression1
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(21), // and, reduce: Expression2
			reduce(21), // or, reduce: Expression2
			reduce(21), // +, reduce: Expression2
			reduce(21), // -, reduce: Expression2
			shift(106), // *
			shift(107), // /
			nil,        // !
			nil,        // (
			reduce(21), // ), reduce: Expression2
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(24), // and, reduce: Expression3
			reduce(24), // or, reduce: Expression3
			reduce(24), // +, reduce: Expression3
			reduce(24), // -, reduce: Expression3
			reduce(24), // *, reduce: Expression3
			reduce(24), // /, reduce: Expression3
			nil,        // !
			nil,        // (
			reduce(24), // ), reduce: Expression3
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(27), // and, reduce: Expression4
			reduce(27), // or, reduce: Expression4
			reduce(27), // +, reduce: Expression4
			reduce(27), // -, reduce: Expression4
			reduce(27), // *, reduce: Expression4
			reduce(27), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(27), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(28), // and, reduce: Expression4
			reduce(28), // or, reduce: Expression4
			reduce(28), // +, reduce: Expression4
			reduce(28), // -, reduce: Expression4
			reduce(28), // *, reduce: Expression4
			reduce(28), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(28), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(29), // and, reduce: Expression4
			reduce(29), // or, reduce: Expression4
			reduce(29), // +, reduce: Expression4
			reduce(29), // -, reduce: Expression4
			reduce(29), // *, reduce: Expression4
			reduce(29), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(29), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(30), // and, reduce: Expression4
			reduce(30), // or, reduce: Expression4
			reduce(30), // +, reduce: Expression4
			reduce(30), // -, reduce: Expression4
			reduce(30), // *, reduce: Expression4
			reduce(30), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(30), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(31), // and, reduce: Expression4
			reduce(31), // or, reduce: Expression4
			reduce(31), // +, reduce: Expression4
			reduce(31), // -, reduce: Expression4
			reduce(31), // *, reduce: Expression4
			reduce(31), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(31), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(32), // and, reduce: Expression4
			reduce(32), // or, reduce: Expression4
			reduce(32), // +, reduce: Expression4
			reduce(32), // -, reduce: Expression4
			reduce(32), // *, reduce: Expression4
			reduce(32), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(32), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(33), // and, reduce: Expression4
			reduce(33), // or, reduce: Expression4
			reduce(33), // +, reduce: Expression4
			reduce(33), // -, reduce: Expression4
			reduce(33), // *, reduce: Expression4
			reduce(33), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(33), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // !
			shift(61), // (
			nil,       // )
			shift(62), // id
			shift(63), // int_lit
			shift(64), // string_lit
			shift(65), // true
			shift(66), // false
			shift(67), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // !
			shift(61), // (
			nil,       // )
			shift(62), // id
			shift(63), // int_lit
			shift(64), // string_lit
			shift(65), // true
			shift(66), // false
			shift(67), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(36), // and, reduce: Identifier
			reduce(36), // or, reduce: Identifier
			reduce(36), // +, reduce: Identifier
			reduce(36), // -, reduce: Identifier
			reduce(36), // *, reduce: Identifier
			reduce(36), // /, reduce: Identifier
			nil,        // !
			shift(110), // (
			reduce(36), // ), reduce: Identifier
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(37), // and, reduce: IntegerLiteral
			reduce(37), // or, reduce: IntegerLiteral
			reduce(37), // +, reduce: IntegerLiteral
			reduce(37), // -, reduce: IntegerLiteral
			reduce(37), // *, reduce: IntegerLiteral
			reduce(37), // /, reduce: IntegerLiteral
			nil,        // !
			nil,        // (
			reduce(37), // ), reduce: IntegerLiteral
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(38), // and, reduce: StringLiteral
			reduce(38), // or, reduce: StringLiteral
			reduce(38), // +, reduce: StringLiteral
			reduce(38), // -, reduce: StringLiteral
			reduce(38), // *, reduce: StringLiteral
			reduce(38), // /, reduce: StringLiteral
			nil,        // !
			nil,        // (
			reduce(38), // ), reduce: StringLiteral
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(39), // and, reduce: TrueLiteral
			reduce(39), // or, reduce: TrueLiteral
			reduce(39), // +, reduce: TrueLiteral
			reduce(39), // -, reduce: TrueLiteral
			reduce(39), // *, reduce: TrueLiteral
			reduce(39), // /, reduce: TrueLiteral
			nil,        // !
			nil,        // (
			reduce(39), // ), reduce: TrueLiteral
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(40), // and, reduce: FalseLiteral
			reduce(40), // or, reduce: FalseLiteral
			reduce(40), // +, reduce: FalseLiteral
			reduce(40), // -, reduce: FalseLiteral
			reduce(40), // *, reduce: FalseLiteral
			reduce(40), // /, reduce: FalseLiteral
			nil,        // !
			nil,        // (
			reduce(40), // ), reduce: FalseLiteral
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(41), // and, reduce: NilLiteral
			reduce(41), // or, reduce: NilLiteral
			reduce(41), // +, reduce: NilLiteral
			reduce(41), // -, reduce: NilLiteral
			reduce(41), // *, reduce: NilLiteral
			reduce(41), // /, reduce: NilLiteral
			nil,        // !
			nil,        // (
			reduce(41), // ), reduce: NilLiteral
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(123), // !
			shift(124), // (
			reduce(43), // ), reduce: Arguments
			shift(125), // id
			shift(126), // int_lit
			shift(127), // string_lit
			shift(128), // true
			shift(129), // false
			shift(130), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(25), // !
			shift(26), // (
			nil,       // )
			shift(47), // id
			shift(28), // int_lit
			shift(29), // string_lit
			shift(30), // true
			shift(31), // false
			shift(32), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			shift(134), // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(50), // {, reduce: Condition
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(135), // and
			shift(136), // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(17), // {, reduce: Expression
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(18), // and, reduce: Expression1
			reduce(18), // or, reduce: Expression1
			shift(137), // +
			shift(138), // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(18), // {, reduce: Expression1
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(21), // and, reduce: Expression2
			reduce(21), // or, reduce: Expression2
			reduce(21), // +, reduce: Expression2
			reduce(21), // -, reduce: Expression2
			shift(139), // *
			shift(140), // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(21), // {, reduce: Expression2
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(24), // and, reduce: Expression3
			reduce(24), // or, reduce: Expression3
			reduce(24), // +, reduce: Expression3
			reduce(24), // -, reduce: Expression3
			reduce(24), // *, reduce: Expression3
			reduce(24), // /, reduce: Expression3
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(24), // {, reduce: Expression3
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(27), // and, reduce: Expression4
			reduce(27), // or, reduce: Expression4
			reduce(27), // +, reduce: Expression4
			reduce(27), // -, reduce: Expression4
			reduce(27), // *, reduce: Expression4
			reduce(27), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(27), // {, reduce: Expression4
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(28), // and, reduce: Expression4
			reduce(28), // or, reduce: Expression4
			reduce(28), // +, reduce: Expression4
			reduce(28), // -, reduce: Expression4
			reduce(28), // *, reduce: Expression4
			reduce(28), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(28), // {, reduce: Expression4
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(29), // and, reduce: Expression4
			reduce(29), // or, reduce: Expression4
			reduce(29), // +, reduce: Expression4
			reduce(29), // -, reduce: Expression4
			reduce(29), // *, reduce: Expression4
			reduce(29), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(29), // {, reduce: Expression4
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(30), // and, reduce: Expression4
			reduce(30), // or, reduce: Expression4
			reduce(30), // +, reduce: Expression4
			reduce(30), // -, reduce: Expression4
			reduce(30), // *, reduce: Expression4
			reduce(30), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(30), // {, reduce: Expression4
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(31), // and, reduce: Expression4
			reduce(31), // or, reduce: Expression4
			reduce(31), // +, reduce: Expression4
			reduce(31), // -, reduce: Expression4
			reduce(31), // *, reduce: Expression4
			reduce(31), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(31), // {, reduce: Expression4
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(32), // and, reduce: Expression4
			reduce(32), // or, reduce: Expression4
			reduce(32), // +, reduce: Expression4
			reduce(32), // -, reduce: Expression4
			reduce(32), // *, reduce: Expression4
			reduce(32), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(32), // {, reduce: Expression4
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(33), // and, reduce: Expression4
			reduce(33), // or, reduce: Expression4
			reduce(33), // +, reduce: Expression4
			reduce(33), // -, reduce: Expression4
			reduce(33), // *, reduce: Expression4
			reduce(33), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(33), // {, reduce: Expression4
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(83), // !
			shift(84), // (
			nil,       // )
			shift(85), // id
			shift(86), // int_lit
			shift(87), // string_lit
			shift(88), // true
			shift(89), // false
			shift(90), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // !
			shift(61), // (
			nil,       // )
			shift(62), // id
			shift(63), // int_lit
			shift(64), // string_lit
			shift(65), // true
			shift(66), // false
			shift(67), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(36), // and, reduce: Identifier
			reduce(36), // or, reduce: Identifier
			reduce(36), // +, reduce: Identifier
			reduce(36), // -, reduce: Identifier
			reduce(36), // *, reduce: Identifier
			reduce(36), // /, reduce: Identifier
			nil,        // !
			shift(143), // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(36), // {, reduce: Identifier
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(37), // and, reduce: IntegerLiteral
			reduce(37), // or, reduce: IntegerLiteral
			reduce(37), // +, reduce: IntegerLiteral
			reduce(37), // -, reduce: IntegerLiteral
			reduce(37), // *, reduce: IntegerLiteral
			reduce(37), // /, reduce: IntegerLiteral
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(37), // {, reduce: IntegerLiteral
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(38), // and, reduce: StringLiteral
			reduce(38), // or, reduce: StringLiteral
			reduce(38), // +, reduce: StringLiteral
			reduce(38), // -, reduce: StringLiteral
			reduce(38), // *, reduce: StringLiteral
			reduce(38), // /, reduce: StringLiteral
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(38), // {, reduce: StringLiteral
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(39), // and, reduce: TrueLiteral
			reduce(39), // or, reduce: TrueLiteral
			reduce(39), // +, reduce: TrueLiteral
			reduce(39), // -, reduce: TrueLiteral
			reduce(39), // *, reduce: TrueLiteral
			reduce(39), // /, reduce: TrueLiteral
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(39), // {, reduce: TrueLiteral
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(40), // and, reduce: FalseLiteral
			reduce(40), // or, reduce: FalseLiteral
			reduce(40), // +, reduce: FalseLiteral
			reduce(40), // -, reduce: FalseLiteral
			reduce(40), // *, reduce: FalseLiteral
			reduce(40), // /, reduce: FalseLiteral
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(40), // {, reduce: FalseLiteral
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(41), // and, reduce: NilLiteral
			reduce(41), // or, reduce: NilLiteral
			reduce(41), // +, reduce: NilLiteral
			reduce(41), // -, reduce: NilLiteral
			reduce(41), // *, reduce: NilLiteral
			reduce(41), // /, reduce: NilLiteral
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(41), // {, reduce: NilLiteral
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			shift(145), // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			shift(147), // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			shift(148), // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(58), // ␚, reduce: Return
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(58), // !, reduce: Return
			reduce(58), // (, reduce: Return
			nil,        // )
			reduce(58), // id, reduce: Return
			reduce(58), // int_lit, reduce: Return
			reduce(58), // string_lit, reduce: Return
			reduce(58), // true, reduce: Return
			reduce(58), // false, reduce: Return
			reduce(58), // nil, reduce: Return
			nil,        // ,
			reduce(58), // var, reduce: Return
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(58), // if, reduce: Return
			nil,        // else
			reduce(58), // while, reduce: Return
			reduce(58), // break, reduce: Return
			reduce(58), // func, reduce: Return
			reduce(58), // return, reduce: Return
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(19), // ␚, reduce: Expression1
			nil,        // empty
			reduce(19), // and, reduce: Expression1
			reduce(19), // or, reduce: Expression1
			shift(42),  // +
			shift(43),  // -
			nil,        // *
			nil,        // /
			reduce(19), // !, reduce: Expression1
			reduce(19), // (, reduce: Expression1
			nil,        // )
			reduce(19), // id, reduce: Expression1
			reduce(19), // int_lit, reduce: Expression1
			reduce(19), // string_lit, reduce: Expression1
			reduce(19), // true, reduce: Expression1
			reduce(19), // false, reduce: Expression1
			reduce(19), // nil, reduce: Expression1
			nil,        // ,
			reduce(19), // var, reduce: Expression1
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(19), // if, reduce: Expression1
			nil,        // else
			reduce(19), // while, reduce: Expression1
			reduce(19), // break, reduce: Expression1
			reduce(19), // func, reduce: Expression1
			reduce(19), // return, reduce: Expression1
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(20), // ␚, reduce: Expression1
			nil,        // empty
			reduce(20), // and, reduce: Expression1
			reduce(20), // or, reduce: Expression1
			shift(42),  // +
			shift(43),  // -
			nil,        // *
			nil,        // /
			reduce(20), // !, reduce: Expression1
			reduce(20), // (, reduce: Expression1
			nil,        // )
			reduce(20), // id, reduce: Expression1
			reduce(20), // int_lit, reduce: Expression1
			reduce(20), // string_lit, reduce: Expression1
			reduce(20), // true, reduce: Expression1
			reduce(20), // false, reduce: Expression1
			reduce(20), // nil, reduce: Expression1
			nil,        // ,
			reduce(20), // var, reduce: Expression1
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(20), // if, reduce: Expression1
			nil,        // else
			reduce(20), // while, reduce: Expression1
			reduce(20), // break, reduce: Expression1
			reduce(20), // func, reduce: Expression1
			reduce(20), // return, reduce: Expression1
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(22), // ␚, reduce: Expression2
			nil,        // empty
			reduce(22), // and, reduce: Expression2
			reduce(22), // or, reduce: Expression2
			reduce(22), // +, reduce: Expression2
			reduce(22), // -, reduce: Expression2
			shift(44),  // *
			shift(45),  // /
			reduce(22), // !, reduce: Expression2
			reduce(22), // (, reduce: Expression2
			nil,        // )
			reduce(22), // id, reduce: Expression2
			reduce(22), // int_lit, reduce: Expression2
			reduce(22), // string_lit, reduce: Expression2
			reduce(22), // true, reduce: Expression2
			reduce(22), // false, reduce: Expression2
			reduce(22), // nil, reduce: Expression2
			nil,        // ,
			reduce(22), // var, reduce: Expression2
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(22), // if, reduce: Expression2
			nil,        // else
			reduce(22), // while, reduce: Expression2
			reduce(22), // break, reduce: Expression2
			reduce(22), // func, reduce: Expression2
			reduce(22), // return, reduce: Expression2
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(23), // ␚, reduce: Expression2
			nil,        // empty
			reduce(23), // and, reduce: Expression2
			reduce(23), // or, reduce: Expression2
			reduce(23), // +, reduce: Expression2
			reduce(23), // -, reduce: Expression2
			shift(44),  // *
			shift(45),  // /
			reduce(23), // !, reduce: Expression2
			reduce(23), // (, reduce: Expression2
			nil,        // )
			reduce(23), // id, reduce: Expression2
			reduce(23), // int_lit, reduce: Expression2
			reduce(23), // string_lit, reduce: Expression2
			reduce(23), // true, reduce: Expression2
			reduce(23), // false, reduce: Expression2
			reduce(23), // nil, reduce: Expression2
			nil,        // ,
			reduce(23), // var, reduce: Expression2
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(23), // if, reduce: Expression2
			nil,        // else
			reduce(23), // while, reduce: Expression2
			reduce(23), // break, reduce: Expression2
			reduce(23), // func, reduce: Expression2
			reduce(23), // return, reduce: Expression2
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(25), // ␚, reduce: Expression3
			nil,        // empty
			reduce(25), // and, reduce: Expression3
			reduce(25), // or, reduce: Expression3
			reduce(25), // +, reduce: Expression3
			reduce(25), // -, reduce: Expression3
			reduce(25), // *, reduce: Expression3
			reduce(25), // /, reduce: Expression3
			reduce(25), // !, reduce: Expression3
			reduce(25), // (, reduce: Expression3
			nil,        // )
			reduce(25), // id, reduce: Expression3
			reduce(25), // int_lit, reduce: Expression3
			reduce(25), // string_lit, reduce: Expression3
			reduce(25), // true, reduce: Expression3
			reduce(25), // false, reduce: Expression3
			reduce(25), // nil, reduce: Expression3
			nil,        // ,
			reduce(25), // var, reduce: Expression3
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(25), // if, reduce: Expression3
			nil,        // else
			reduce(25), // while, reduce: Expression3
			reduce(25), // break, reduce: Expression3
			reduce(25), // func, reduce: Expression3
			reduce(25), // return, reduce: Expression3
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(26), // ␚, reduce: Expression3
			nil,        // empty
			reduce(26), // and, reduce: Expression3
			reduce(26), // or, reduce: Expression3
			reduce(26), // +, reduce: Expression3
			reduce(26), // -, reduce: Expression3
			reduce(26), // *, reduce: Expression3
			reduce(26), // /, reduce: Expression3
			reduce(26), // !, reduce: Expression3
			reduce(26), // (, reduce: Expression3
			nil,        // )
			reduce(26), // id, reduce: Expression3
			reduce(26), // int_lit, reduce: Expression3
			reduce(26), // string_lit, reduce: Expression3
			reduce(26), // true, reduce: Expression3
			reduce(26), // false, reduce: Expression3
			reduce(26), // nil, reduce: Expression3
			nil,        // ,
			reduce(26), // var, reduce: Expression3
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(26), // if, reduce: Expression3
			nil,        // else
			reduce(26), // while, reduce: Expression3
			reduce(26), // break, reduce: Expression3
			reduce(26), // func, reduce: Expression3
			reduce(26), // return, reduce: Expression3
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(35), // ␚, reduce: Expression4
			nil,        // empty
			reduce(35), // and, reduce: Expression4
			reduce(35), // or, reduce: Expression4
			reduce(35), // +, reduce: Expression4
			reduce(35), // -, reduce: Expression4
			reduce(35), // *, reduce: Expression4
			reduce(35), // /, reduce: Expression4
			reduce(35), // !, reduce: Expression4
			reduce(35), // (, reduce: Expression4
			nil,        // )
			reduce(35), // id, reduce: Expression4
			reduce(35), // int_lit, reduce: Expression4
			reduce(35), // string_lit, reduce: Expression4
			reduce(35), // true, reduce: Expression4
			reduce(35), // false, reduce: Expression4
			reduce(35), // nil, reduce: Expression4
			nil,        // ,
			reduce(35), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(35), // if, reduce: Expression4
			nil,        // else
			reduce(35), // while, reduce: Expression4
			reduce(35), // break, reduce: Expression4
			reduce(35), // func, reduce: Expression4
			reduce(35), // return, reduce: Expression4
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // !
			shift(61), // (
			nil,       // )
			shift(62), // id
			shift(63), // int_lit
			shift(64), // string_lit
			shift(65), // true
			shift(66), // false
			shift(67), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // !
			shift(61), // (
			nil,       // )
			shift(62), // id
			shift(63), // int_lit
			shift(64), // string_lit
			shift(65), // true
			shift(66), // false
			shift(67), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // !
			shift(61), // (
			nil,       // )
			shift(62), // id
			shift(63), // int_lit
			shift(64), // string_lit
			shift(65), // true
			shift(66), // false
			shift(67), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // !
			shift(61), // (
			nil,       // )
			shift(62), // id
			shift(63), // int_lit
			shift(64), // string_lit
			shift(65), // true
			shift(66), // false
			shift(67), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // !
			shift(61), // (
			nil,       // )
			shift(62), // id
			shift(63), // int_lit
			shift(64), // string_lit
			shift(65), // true
			shift(66), // false
			shift(67), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // !
			shift(61), // (
			nil,       // )
			shift(62), // id
			shift(63), // int_lit
			shift(64), // string_lit
			shift(65), // true
			shift(66), // false
			shift(67), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S108
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(34), // and, reduce: Expression4
			reduce(34), // or, reduce: Expression4
			reduce(34), // +, reduce: Expression4
			reduce(34), // -, reduce: Expression4
			reduce(34), // *, reduce: Expression4
			reduce(34), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(34), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S109
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			shift(155), // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S110
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(123), // !
			shift(124), // (
			reduce(43), // ), reduce: Arguments
			shift(125), // id
			shift(126), // int_lit
			shift(127), // string_lit
			shift(128), // true
			shift(129), // false
			shift(130), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S111
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			reduce(45), // ), reduce: ArgumentList
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(45), // ,, reduce: ArgumentList
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S112
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(157), // and
			shift(158), // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			reduce(17), // ), reduce: Expression
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(17), // ,, reduce: Expression
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S113
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(18), // and, reduce: Expression1
			reduce(18), // or, reduce: Expression1
			shift(159), // +
			shift(160), // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			reduce(18), // ), reduce: Expression1
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(18), // ,, reduce: Expression1
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S114
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(21), // and, reduce: Expression2
			reduce(21), // or, reduce: Expression2
			reduce(21), // +, reduce: Expression2
			reduce(21), // -, reduce: Expression2
			shift(161), // *
			shift(162), // /
			nil,        // !
			nil,        // (
			reduce(21), // ), reduce: Expression2
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(21), // ,, reduce: Expression2
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S115
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(24), // and, reduce: Expression3
			reduce(24), // or, reduce: Expression3
			reduce(24), // +, reduce: Expression3
			reduce(24), // -, reduce: Expression3
			reduce(24), // *, reduce: Expression3
			reduce(24), // /, reduce: Expression3
			nil,        // !
			nil,        // (
			reduce(24), // ), reduce: Expression3
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(24), // ,, reduce: Expression3
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S116
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(27), // and, reduce: Expression4
			reduce(27), // or, reduce: Expression4
			reduce(27), // +, reduce: Expression4
			reduce(27), // -, reduce: Expression4
			reduce(27), // *, reduce: Expression4
			reduce(27), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(27), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(27), // ,, reduce: Expression4
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S117
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(28), // and, reduce: Expression4
			reduce(28), // or, reduce: Expression4
			reduce(28), // +, reduce: Expression4
			reduce(28), // -, reduce: Expression4
			reduce(28), // *, reduce: Expression4
			reduce(28), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(28), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(28), // ,, reduce: Expression4
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S118
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(29), // and, reduce: Expression4
			reduce(29), // or, reduce: Expression4
			reduce(29), // +, reduce: Expression4
			reduce(29), // -, reduce: Expression4
			reduce(29), // *, reduce: Expression4
			reduce(29), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(29), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(29), // ,, reduce: Expression4
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S119
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(30), // and, reduce: Expression4
			reduce(30), // or, reduce: Expression4
			reduce(30), // +, reduce: Expression4
			reduce(30), // -, reduce: Expression4
			reduce(30), // *, reduce: Expression4
			reduce(30), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(30), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(30), // ,, reduce: Expression4
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S120
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(31), // and, reduce: Expression4
			reduce(31), // or, reduce: Expression4
			reduce(31), // +, reduce: Expression4
			reduce(31), // -, reduce: Expression4
			reduce(31), // *, reduce: Expression4
			reduce(31), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(31), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(31), // ,, reduce: Expression4
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S121
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(32), // and, reduce: Expression4
			reduce(32), // or, reduce: Expression4
			reduce(32), // +, reduce: Expression4
			reduce(32), // -, reduce: Expression4
			reduce(32), // *, reduce: Expression4
			reduce(32), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(32), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(32), // ,, reduce: Expression4
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S122
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(33), // and, reduce: Expression4
			reduce(33), // or, reduce: Expression4
			reduce(33), // +, reduce: Expression4
			reduce(33), // -, reduce: Expression4
			reduce(33), // *, reduce: Expression4
			reduce(33), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(33), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(33), // ,, reduce: Expression4
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S123
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(123), // !
			shift(124), // (
			nil,        // )
			shift(125), // id
			shift(126), // int_lit
			shift(127), // string_lit
			shift(128), // true
			shift(129), // false
			shift(130), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S124
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // !
			shift(61), // (
			nil,       // )
			shift(62), // id
			shift(63), // int_lit
			shift(64), // string_lit
			shift(65), // true
			shift(66), // false
			shift(67), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S125
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(36), // and, reduce: Identifier
			reduce(36), // or, reduce: Identifier
			reduce(36), // +, reduce: Identifier
			reduce(36), // -, reduce: Identifier
			reduce(36), // *, reduce: Identifier
			reduce(36), // /, reduce: Identifier
			nil,        // !
			shift(165), // (
			reduce(36), // ), reduce: Identifier
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(36), // ,, reduce: Identifier
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S126
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(37), // and, reduce: IntegerLiteral
			reduce(37), // or, reduce: IntegerLiteral
			reduce(37), // +, reduce: IntegerLiteral
			reduce(37), // -, reduce: IntegerLiteral
			reduce(37), // *, reduce: IntegerLiteral
			reduce(37), // /, reduce: IntegerLiteral
			nil,        // !
			nil,        // (
			reduce(37), // ), reduce: IntegerLiteral
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(37), // ,, reduce: IntegerLiteral
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S127
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(38), // and, reduce: StringLiteral
			reduce(38), // or, reduce: StringLiteral
			reduce(38), // +, reduce: StringLiteral
			reduce(38), // -, reduce: StringLiteral
			reduce(38), // *, reduce: StringLiteral
			reduce(38), // /, reduce: StringLiteral
			nil,        // !
			nil,        // (
			reduce(38), // ), reduce: StringLiteral
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(38), // ,, reduce: StringLiteral
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S128
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(39), // and, reduce: TrueLiteral
			reduce(39), // or, reduce: TrueLiteral
			reduce(39), // +, reduce: TrueLiteral
			reduce(39), // -, reduce: TrueLiteral
			reduce(39), // *, reduce: TrueLiteral
			reduce(39), // /, reduce: TrueLiteral
			nil,        // !
			nil,        // (
			reduce(39), // ), reduce: TrueLiteral
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(39), // ,, reduce: TrueLiteral
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S129
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(40), // and, reduce: FalseLiteral
			reduce(40), // or, reduce: FalseLiteral
			reduce(40), // +, reduce: FalseLiteral
			reduce(40), // -, reduce: FalseLiteral
			reduce(40), // *, reduce: FalseLiteral
			reduce(40), // /, reduce: FalseLiteral
			nil,        // !
			nil,        // (
			reduce(40), // ), reduce: FalseLiteral
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(40), // ,, reduce: FalseLiteral
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S130
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(41), // and, reduce: NilLiteral
			reduce(41), // or, reduce: NilLiteral
			reduce(41), // +, reduce: NilLiteral
			reduce(41), // -, reduce: NilLiteral
			reduce(41), // *, reduce: NilLiteral
			reduce(41), // /, reduce: NilLiteral
			nil,        // !
			nil,        // (
			reduce(41), // ), reduce: NilLiteral
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(41), // ,, reduce: NilLiteral
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S131
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			shift(166), // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S132
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			reduce(44), // ), reduce: Arguments
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			shift(167), // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S133
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(48), // ␚, reduce: Assign
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(48), // !, reduce: Assign
			reduce(48), // (, reduce: Assign
			nil,        // )
			reduce(48), // id, reduce: Assign
			reduce(48), // int_lit, reduce: Assign
			reduce(48), // string_lit, reduce: Assign
			reduce(48), // true, reduce: Assign
			reduce(48), // false, reduce: Assign
			reduce(48), // nil, reduce: Assign
			nil,        // ,
			reduce(48), // var, reduce: Assign
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(48), // if, reduce: Assign
			nil,        // else
			reduce(48), // while, reduce: Assign
			reduce(48), // break, reduce: Assign
			reduce(48), // func, reduce: Assign
			reduce(48), // return, reduce: Assign
		},
	},
	actionRow{ // S134
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(25), // !
			shift(26), // (
			nil,       // )
			shift(47), // id
			shift(28), // int_lit
			shift(29), // string_lit
			shift(30), // true
			shift(31), // false
			shift(32), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S135
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(83), // !
			shift(84), // (
			nil,       // )
			shift(85), // id
			shift(86), // int_lit
			shift(87), // string_lit
			shift(88), // true
			shift(89), // false
			shift(90), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S136
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(83), // !
			shift(84), // (
			nil,       // )
			shift(85), // id
			shift(86), // int_lit
			shift(87), // string_lit
			shift(88), // true
			shift(89), // false
			shift(90), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S137
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(83), // !
			shift(84), // (
			nil,       // )
			shift(85), // id
			shift(86), // int_lit
			shift(87), // string_lit
			shift(88), // true
			shift(89), // false
			shift(90), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S138
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(83), // !
			shift(84), // (
			nil,       // )
			shift(85), // id
			shift(86), // int_lit
			shift(87), // string_lit
			shift(88), // true
			shift(89), // false
			shift(90), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S139
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(83), // !
			shift(84), // (
			nil,       // )
			shift(85), // id
			shift(86), // int_lit
			shift(87), // string_lit
			shift(88), // true
			shift(89), // false
			shift(90), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S140
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(83), // !
			shift(84), // (
			nil,       // )
			shift(85), // id
			shift(86), // int_lit
			shift(87), // string_lit
			shift(88), // true
			shift(89), // false
			shift(90), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S141
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(34), // and, reduce: Expression4
			reduce(34), // or, reduce: Expression4
			reduce(34), // +, reduce: Expression4
			reduce(34), // -, reduce: Expression4
			reduce(34), // *, reduce: Expression4
			reduce(34), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(34), // {, reduce: Expression4
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S142
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			shift(175), // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S143
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(123), // !
			shift(124), // (
			reduce(43), // ), reduce: Arguments
			shift(125), // id
			shift(126), // int_lit
			shift(127), // string_lit
			shift(128), // true
			shift(129), // false
			shift(130), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S144
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(51), // ␚, reduce: If
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(51), // !, reduce: If
			reduce(51), // (, reduce: If
			nil,        // )
			reduce(51), // id, reduce: If
			reduce(51), // int_lit, reduce: If
			reduce(51), // string_lit, reduce: If
			reduce(51), // true, reduce: If
			reduce(51), // false, reduce: If
			reduce(51), // nil, reduce: If
			nil,        // ,
			reduce(51), // var, reduce: If
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(51), // if, reduce: If
			shift(177), // else
			reduce(51), // while, reduce: If
			reduce(51), // break, reduce: If
			reduce(51), // func, reduce: If
			reduce(51), // return, reduce: If
		},
	},
	actionRow{ // S145
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(201), // !
			shift(202), // (
			nil,        // )
			shift(203), // id
			shift(204), // int_lit
			shift(205), // string_lit
			shift(206), // true
			shift(207), // false
			shift(208), // nil
			nil,        // ,
			shift(209), // var
			nil,        // =
			nil,        // {
			reduce(2),  // }, reduce: Statements
			shift(210), // if
			nil,        // else
			shift(211), // while
			shift(212), // break
			shift(213), // func
			shift(214), // return
		},
	},
	actionRow{ // S146
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(55), // ␚, reduce: While
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(55), // !, reduce: While
			reduce(55), // (, reduce: While
			nil,        // )
			reduce(55), // id, reduce: While
			reduce(55), // int_lit, reduce: While
			reduce(55), // string_lit, reduce: While
			reduce(55), // true, reduce: While
			reduce(55), // false, reduce: While
			reduce(55), // nil, reduce: While
			nil,        // ,
			reduce(55), // var, reduce: While
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(55), // if, reduce: While
			nil,        // else
			reduce(55), // while, reduce: While
			reduce(55), // break, reduce: While
			reduce(55), // func, reduce: While
			reduce(55), // return, reduce: While
		},
	},
	actionRow{ // S147
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(201), // !
			shift(202), // (
			nil,        // )
			shift(203), // id
			shift(204), // int_lit
			shift(205), // string_lit
			shift(206), // true
			shift(207), // false
			shift(208), // nil
			nil,        // ,
			shift(209), // var
			nil,        // =
			nil,        // {
			reduce(2),  // }, reduce: Statements
			shift(210), // if
			nil,        // else
			shift(211), // while
			shift(212), // break
			shift(213), // func
			shift(214), // return
		},
	},
	actionRow{ // S148
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			shift(216), // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S149
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(19), // and, reduce: Expression1
			reduce(19), // or, reduce: Expression1
			shift(104), // +
			shift(105), // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			reduce(19), // ), reduce: Expression1
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S150
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(20), // and, reduce: Expression1
			reduce(20), // or, reduce: Expression1
			shift(104), // +
			shift(105), // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			reduce(20), // ), reduce: Expression1
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S151
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(22), // and, reduce: Expression2
			reduce(22), // or, reduce: Expression2
			reduce(22), // +, reduce: Expression2
			reduce(22), // -, reduce: Expression2
			shift(106), // *
			shift(107), // /
			nil,        // !
			nil,        // (
			reduce(22), // ), reduce: Expression2
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S152
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(23), // and, reduce: Expression2
			reduce(23), // or, reduce: Expression2
			reduce(23), // +, reduce: Expression2
			reduce(23), // -, reduce: Expression2
			shift(106), // *
			shift(107), // /
			nil,        // !
			nil,        // (
			reduce(23), // ), reduce: Expression2
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S153
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(25), // and, reduce: Expression3
			reduce(25), // or, reduce: Expression3
			reduce(25), // +, reduce: Expression3
			reduce(25), // -, reduce: Expression3
			reduce(25), // *, reduce: Expression3
			reduce(25), // /, reduce: Expression3
			nil,        // !
			nil,        // (
			reduce(25), // ), reduce: Expression3
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S154
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(26), // and, reduce: Expression3
			reduce(26), // or, reduce: Expression3
			reduce(26), // +, reduce: Expression3
			reduce(26), // -, reduce: Expression3
			reduce(26), // *, reduce: Expression3
			reduce(26), // /, reduce: Expression3
			nil,        // !
			nil,        // (
			reduce(26), // ), reduce: Expression3
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S155
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(35), // and, reduce: Expression4
			reduce(35), // or, reduce: Expression4
			reduce(35), // +, reduce: Expression4
			reduce(35), // -, reduce: Expression4
			reduce(35), // *, reduce: Expression4
			reduce(35), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(35), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S156
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			shift(217), // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S157
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(123), // !
			shift(124), // (
			nil,        // )
			shift(125), // id
			shift(126), // int_lit
			shift(127), // string_lit
			shift(128), // true
			shift(129), // false
			shift(130), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S158
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(123), // !
			shift(124), // (
			nil,        // )
			shift(125), // id
			shift(126), // int_lit
			shift(127), // string_lit
			shift(128), // true
			shift(129), // false
			shift(130), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S159
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(123), // !
			shift(124), // (
			nil,        // )
			shift(125), // id
			shift(126), // int_lit
			shift(127), // string_lit
			shift(128), // true
			shift(129), // false
			shift(130), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S160
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(123), // !
			shift(124), // (
			nil,        // )
			shift(125), // id
			shift(126), // int_lit
			shift(127), // string_lit
			shift(128), // true
			shift(129), // false
			shift(130), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S161
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(123), // !
			shift(124), // (
			nil,        // )
			shift(125), // id
			shift(126), // int_lit
			shift(127), // string_lit
			shift(128), // true
			shift(129), // false
			shift(130), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S162
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(123), // !
			shift(124), // (
			nil,        // )
			shift(125), // id
			shift(126), // int_lit
			shift(127), // string_lit
			shift(128), // true
			shift(129), // false
			shift(130), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S163
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(34), // and, reduce: Expression4
			reduce(34), // or, reduce: Expression4
			reduce(34), // +, reduce: Expression4
			reduce(34), // -, reduce: Expression4
			reduce(34), // *, reduce: Expression4
			reduce(34), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(34), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(34), // ,, reduce: Expression4
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S164
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			shift(224), // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S165
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(123), // !
			shift(124), // (
			reduce(43), // ), reduce: Arguments
			shift(125), // id
			shift(126), // int_lit
			shift(127), // string_lit
			shift(128), // true
			shift(129), // false
			shift(130), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S166
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(42), // ␚, reduce: FunctionCall
			nil,        // empty
			reduce(42), // and, reduce: FunctionCall
			reduce(42), // or, reduce: FunctionCall
			reduce(42), // +, reduce: FunctionCall
			reduce(42), // -, reduce: FunctionCall
			reduce(42), // *, reduce: FunctionCall
			reduce(42), // /, reduce: FunctionCall
			reduce(42), // !, reduce: FunctionCall
			reduce(42), // (, reduce: FunctionCall
			nil,        // )
			reduce(42), // id, reduce: FunctionCall
			reduce(42), // int_lit, reduce: FunctionCall
			reduce(42), // string_lit, reduce: FunctionCall
			reduce(42), // true, reduce: FunctionCall
			reduce(42), // false, reduce: FunctionCall
			reduce(42), // nil, reduce: FunctionCall
			nil,        // ,
			reduce(42), // var, reduce: FunctionCall
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(42), // if, reduce: FunctionCall
			nil,        // else
			reduce(42), // while, reduce: FunctionCall
			reduce(42), // break, reduce: FunctionCall
			reduce(42), // func, reduce: FunctionCall
			reduce(42), // return, reduce: FunctionCall
		},
	},
	actionRow{ // S167
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(123), // !
			shift(124), // (
			nil,        // )
			shift(125), // id
			shift(126), // int_lit
			shift(127), // string_lit
			shift(128), // true
			shift(129), // false
			shift(130), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S168
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(47), // ␚, reduce: Declare
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(47), // !, reduce: Declare
			reduce(47), // (, reduce: Declare
			nil,        // )
			reduce(47), // id, reduce: Declare
			reduce(47), // int_lit, reduce: Declare
			reduce(47), // string_lit, reduce: Declare
			reduce(47), // true, reduce: Declare
			reduce(47), // false, reduce: Declare
			reduce(47), // nil, reduce: Declare
			nil,        // ,
			reduce(47), // var, reduce: Declare
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(47), // if, reduce: Declare
			nil,        // else
			reduce(47), // while, reduce: Declare
			reduce(47), // break, reduce: Declare
			reduce(47), // func, reduce: Declare
			reduce(47), // return, reduce: Declare
		},
	},
	actionRow{ // S169
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(19), // and, reduce: Expression1
			reduce(19), // or, reduce: Expression1
			shift(137), // +
			shift(138), // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(19), // {, reduce: Expression1
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S170
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(20), // and, reduce: Expression1
			reduce(20), // or, reduce: Expression1
			shift(137), // +
			shift(138), // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(20), // {, reduce: Expression1
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S171
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(22), // and, reduce: Expression2
			reduce(22), // or, reduce: Expression2
			reduce(22), // +, reduce: Expression2
			reduce(22), // -, reduce: Expression2
			shift(139), // *
			shift(140), // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(22), // {, reduce: Expression2
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S172
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(23), // and, reduce: Expression2
			reduce(23), // or, reduce: Expression2
			reduce(23), // +, reduce: Expression2
			reduce(23), // -, reduce: Expression2
			shift(139), // *
			shift(140), // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(23), // {, reduce: Expression2
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S173
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(25), // and, reduce: Expression3
			reduce(25), // or, reduce: Expression3
			reduce(25), // +, reduce: Expression3
			reduce(25), // -, reduce: Expression3
			reduce(25), // *, reduce: Expression3
			reduce(25), // /, reduce: Expression3
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(25), // {, reduce: Expression3
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S174
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(26), // and, reduce: Expression3
			reduce(26), // or, reduce: Expression3
			reduce(26), // +, reduce: Expression3
			reduce(26), // -, reduce: Expression3
			reduce(26), // *, reduce: Expression3
			reduce(26), // /, reduce: Expression3
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(26), // {, reduce: Expression3
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S175
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(35), // and, reduce: Expression4
			reduce(35), // or, reduce: Expression4
			reduce(35), // +, reduce: Expression4
			reduce(35), // -, reduce: Expression4
			reduce(35), // *, reduce: Expression4
			reduce(35), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(35), // {, reduce: Expression4
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S176
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			shift(227), // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S177
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			shift(147), // {
			nil,        // }
			shift(34),  // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S178
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			shift(231), // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S179
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(201), // !
			shift(202), // (
			nil,        // )
			shift(203), // id
			shift(204), // int_lit
			shift(205), // string_lit
			shift(206), // true
			shift(207), // false
			shift(208), // nil
			nil,        // ,
			shift(209), // var
			nil,        // =
			nil,        // {
			reduce(3),  // }, reduce: Statements
			shift(210), // if
			nil,        // else
			shift(211), // while
			shift(212), // break
			shift(213), // func
			shift(214), // return
		},
	},
	actionRow{ // S180
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			reduce(4), // !, reduce: StatementList
			reduce(4), // (, reduce: StatementList
			nil,       // )
			reduce(4), // id, reduce: StatementList
			reduce(4), // int_lit, reduce: StatementList
			reduce(4), // string_lit, reduce: StatementList
			reduce(4), // true, reduce: StatementList
			reduce(4), // false, reduce: StatementList
			reduce(4), // nil, reduce: StatementList
			nil,       // ,
			reduce(4), // var, reduce: StatementList
			nil,       // =
			nil,       // {
			reduce(4), // }, reduce: StatementList
			reduce(4), // if, reduce: StatementList
			nil,       // else
			reduce(4), // while, reduce: StatementList
			reduce(4), // break, reduce: StatementList
			reduce(4), // func, reduce: StatementList
			reduce(4), // return, reduce: StatementList
		},
	},
	actionRow{ // S181
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			reduce(6), // !, reduce: Statement
			reduce(6), // (, reduce: Statement
			nil,       // )
			reduce(6), // id, reduce: Statement
			reduce(6), // int_lit, reduce: Statement
			reduce(6), // string_lit, reduce: Statement
			reduce(6), // true, reduce: Statement
			reduce(6), // false, reduce: Statement
			reduce(6), // nil, reduce: Statement
			nil,       // ,
			reduce(6), // var, reduce: Statement
			nil,       // =
			nil,       // {
			reduce(6), // }, reduce: Statement
			reduce(6), // if, reduce: Statement
			nil,       // else
			reduce(6), // while, reduce: Statement
			reduce(6), // break, reduce: Statement
			reduce(6), // func, reduce: Statement
			reduce(6), // return, reduce: Statement
		},
	},
	actionRow{ // S182
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			reduce(7), // !, reduce: Statement
			reduce(7), // (, reduce: Statement
			nil,       // )
			reduce(7), // id, reduce: Statement
			reduce(7), // int_lit, reduce: Statement
			reduce(7), // string_lit, reduce: Statement
			reduce(7), // true, reduce: Statement
			reduce(7), // false, reduce: Statement
			reduce(7), // nil, reduce: Statement
			nil,       // ,
			reduce(7), // var, reduce: Statement
			nil,       // =
			nil,       // {
			reduce(7), // }, reduce: Statement
			reduce(7), // if, reduce: Statement
			nil,       // else
			reduce(7), // while, reduce: Statement
			reduce(7), // break, reduce: Statement
			reduce(7), // func, reduce: Statement
			reduce(7), // return, reduce: Statement
		},
	},
	actionRow{ // S183
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			reduce(8), // !, reduce: Statement
			reduce(8), // (, reduce: Statement
			nil,       // )
			reduce(8), // id, reduce: Statement
			reduce(8), // int_lit, reduce: Statement
			reduce(8), // string_lit, reduce: Statement
			reduce(8), // true, reduce: Statement
			reduce(8), // false, reduce: Statement
			reduce(8), // nil, reduce: Statement
			nil,       // ,
			reduce(8), // var, reduce: Statement
			nil,       // =
			nil,       // {
			reduce(8), // }, reduce: Statement
			reduce(8), // if, reduce: Statement
			nil,       // else
			reduce(8), // while, reduce: Statement
			reduce(8), // break, reduce: Statement
			reduce(8), // func, reduce: Statement
			reduce(8), // return, reduce: Statement
		},
	},
	actionRow{ // S184
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			reduce(9), // !, reduce: Statement
			reduce(9), // (, reduce: Statement
			nil,       // )
			reduce(9), // id, reduce: Statement
			reduce(9), // int_lit, reduce: Statement
			reduce(9), // string_lit, reduce: Statement
			reduce(9), // true, reduce: Statement
			reduce(9), // false, reduce: Statement
			reduce(9), // nil, reduce: Statement
			nil,       // ,
			reduce(9), // var, reduce: Statement
			nil,       // =
			nil,       // {
			reduce(9), // }, reduce: Statement
			reduce(9), // if, reduce: Statement
			nil,       // else
			reduce(9), // while, reduce: Statement
			reduce(9), // break, reduce: Statement
			reduce(9), // func, reduce: Statement
			reduce(9), // return, reduce: Statement
		},
	},
	actionRow{ // S185
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(10), // !, reduce: Statement
			reduce(10), // (, reduce: Statement
			nil,        // )
			reduce(10), // id, reduce: Statement
			reduce(10), // int_lit, reduce: Statement
			reduce(10), // string_lit, reduce: Statement
			reduce(10), // true, reduce: Statement
			reduce(10), // false, reduce: Statement
			reduce(10), // nil, reduce: Statement
			nil,        // ,
			reduce(10), // var, reduce: Statement
			nil,        // =
			nil,        // {
			reduce(10), // }, reduce: Statement
			reduce(10), // if, reduce: Statement
			nil,        // else
			reduce(10), // while, reduce: Statement
			reduce(10), // break, reduce: Statement
			reduce(10), // func, reduce: Statement
			reduce(10), // return, reduce: Statement
		},
	},
	actionRow{ // S186
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(11), // !, reduce: Statement
			reduce(11), // (, reduce: Statement
			nil,        // )
			reduce(11), // id, reduce: Statement
			reduce(11), // int_lit, reduce: Statement
			reduce(11), // string_lit, reduce: Statement
			reduce(11), // true, reduce: Statement
			reduce(11), // false, reduce: Statement
			reduce(11), // nil, reduce: Statement
			nil,        // ,
			reduce(11), // var, reduce: Statement
			nil,        // =
			nil,        // {
			reduce(11), // }, reduce: Statement
			reduce(11), // if, reduce: Statement
			nil,        // else
			reduce(11), // while, reduce: Statement
			reduce(11), // break, reduce: Statement
			reduce(11), // func, reduce: Statement
			reduce(11), // return, reduce: Statement
		},
	},
	actionRow{ // S187
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(12), // !, reduce: Statement
			reduce(12), // (, reduce: Statement
			nil,        // )
			reduce(12), // id, reduce: Statement
			reduce(12), // int_lit, reduce: Statement
			reduce(12), // string_lit, reduce: Statement
			reduce(12), // true, reduce: Statement
			reduce(12), // false, reduce: Statement
			reduce(12), // nil, reduce: Statement
			nil,        // ,
			reduce(12), // var, reduce: Statement
			nil,        // =
			nil,        // {
			reduce(12), // }, reduce: Statement
			reduce(12), // if, reduce: Statement
			nil,        // else
			reduce(12), // while, reduce: Statement
			reduce(12), // break, reduce: Statement
			reduce(12), // func, reduce: Statement
			reduce(12), // return, reduce: Statement
		},
	},
	actionRow{ // S188
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(13), // !, reduce: Statement
			reduce(13), // (, reduce: Statement
			nil,        // )
			reduce(13), // id, reduce: Statement
			reduce(13), // int_lit, reduce: Statement
			reduce(13), // string_lit, reduce: Statement
			reduce(13), // true, reduce: Statement
			reduce(13), // false, reduce: Statement
			reduce(13), // nil, reduce: Statement
			nil,        // ,
			reduce(13), // var, reduce: Statement
			nil,        // =
			nil,        // {
			reduce(13), // }, reduce: Statement
			reduce(13), // if, reduce: Statement
			nil,        // else
			reduce(13), // while, reduce: Statement
			reduce(13), // break, reduce: Statement
			reduce(13), // func, reduce: Statement
			reduce(13), // return, reduce: Statement
		},
	},
	actionRow{ // S189
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(14), // !, reduce: Statement
			reduce(14), // (, reduce: Statement
			nil,        // )
			reduce(14), // id, reduce: Statement
			reduce(14), // int_lit, reduce: Statement
			reduce(14), // string_lit, reduce: Statement
			reduce(14), // true, reduce: Statement
			reduce(14), // false, reduce: Statement
			reduce(14), // nil, reduce: Statement
			nil,        // ,
			reduce(14), // var, reduce: Statement
			nil,        // =
			nil,        // {
			reduce(14), // }, reduce: Statement
			reduce(14), // if, reduce: Statement
			nil,        // else
			reduce(14), // while, reduce: Statement
			reduce(14), // break, reduce: Statement
			reduce(14), // func, reduce: Statement
			reduce(14), // return, reduce: Statement
		},
	},
	actionRow{ // S190
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(233), // and
			shift(234), // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(17), // !, reduce: Expression
			reduce(17), // (, reduce: Expression
			nil,        // )
			reduce(17), // id, reduce: Expression
			reduce(17), // int_lit, reduce: Expression
			reduce(17), // string_lit, reduce: Expression
			reduce(17), // true, reduce: Expression
			reduce(17), // false, reduce: Expression
			reduce(17), // nil, reduce: Expression
			nil,        // ,
			reduce(17), // var, reduce: Expression
			nil,        // =
			nil,        // {
			reduce(17), // }, reduce: Expression
			reduce(17), // if, reduce: Expression
			nil,        // else
			reduce(17), // while, reduce: Expression
			reduce(17), // break, reduce: Expression
			reduce(17), // func, reduce: Expression
			reduce(17), // return, reduce: Expression
		},
	},
	actionRow{ // S191
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(18), // and, reduce: Expression1
			reduce(18), // or, reduce: Expression1
			shift(235), // +
			shift(236), // -
			nil,        // *
			nil,        // /
			reduce(18), // !, reduce: Expression1
			reduce(18), // (, reduce: Expression1
			nil,        // )
			reduce(18), // id, reduce: Expression1
			reduce(18), // int_lit, reduce: Expression1
			reduce(18), // string_lit, reduce: Expression1
			reduce(18), // true, reduce: Expression1
			reduce(18), // false, reduce: Expression1
			reduce(18), // nil, reduce: Expression1
			nil,        // ,
			reduce(18), // var, reduce: Expression1
			nil,        // =
			nil,        // {
			reduce(18), // }, reduce: Expression1
			reduce(18), // if, reduce: Expression1
			nil,        // else
			reduce(18), // while, reduce: Expression1
			reduce(18), // break, reduce: Expression1
			reduce(18), // func, reduce: Expression1
			reduce(18), // return, reduce: Expression1
		},
	},
	actionRow{ // S192
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(21), // and, reduce: Expression2
			reduce(21), // or, reduce: Expression2
			reduce(21), // +, reduce: Expression2
			reduce(21), // -, reduce: Expression2
			shift(237), // *
			shift(238), // /
			reduce(21), // !, reduce: Expression2
			reduce(21), // (, reduce: Expression2
			nil,        // )
			reduce(21), // id, reduce: Expression2
			reduce(21), // int_lit, reduce: Expression2
			reduce(21), // string_lit, reduce: Expression2
			reduce(21), // true, reduce: Expression2
			reduce(21), // false, reduce: Expression2
			reduce(21), // nil, reduce: Expression2
			nil,        // ,
			reduce(21), // var, reduce: Expression2
			nil,        // =
			nil,        // {
			reduce(21), // }, reduce: Expression2
			reduce(21), // if, reduce: Expression2
			nil,        // else
			reduce(21), // while, reduce: Expression2
			reduce(21), // break, reduce: Expression2
			reduce(21), // func, reduce: Expression2
			reduce(21), // return, reduce: Expression2
		},
	},
	actionRow{ // S193
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(24), // and, reduce: Expression3
			reduce(24), // or, reduce: Expression3
			reduce(24), // +, reduce: Expression3
			reduce(24), // -, reduce: Expression3
			reduce(24), // *, reduce: Expression3
			reduce(24), // /, reduce: Expression3
			reduce(24), // !, reduce: Expression3
			reduce(24), // (, reduce: Expression3
			nil,        // )
			reduce(24), // id, reduce: Expression3
			reduce(24), // int_lit, reduce: Expression3
			reduce(24), // string_lit, reduce: Expression3
			reduce(24), // true, reduce: Expression3
			reduce(24), // false, reduce: Expression3
			reduce(24), // nil, reduce: Expression3
			nil,        // ,
			reduce(24), // var, reduce: Expression3
			nil,        // =
			nil,        // {
			reduce(24), // }, reduce: Expression3
			reduce(24), // if, reduce: Expression3
			nil,        // else
			reduce(24), // while, reduce: Expression3
			reduce(24), // break, reduce: Expression3
			reduce(24), // func, reduce: Expression3
			reduce(24), // return, reduce: Expression3
		},
	},
	actionRow{ // S194
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(27), // and, reduce: Expression4
			reduce(27), // or, reduce: Expression4
			reduce(27), // +, reduce: Expression4
			reduce(27), // -, reduce: Expression4
			reduce(27), // *, reduce: Expression4
			reduce(27), // /, reduce: Expression4
			reduce(27), // !, reduce: Expression4
			reduce(27), // (, reduce: Expression4
			nil,        // )
			reduce(27), // id, reduce: Expression4
			reduce(27), // int_lit, reduce: Expression4
			reduce(27), // string_lit, reduce: Expression4
			reduce(27), // true, reduce: Expression4
			reduce(27), // false, reduce: Expression4
			reduce(27), // nil, reduce: Expression4
			nil,        // ,
			reduce(27), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			reduce(27), // }, reduce: Expression4
			reduce(27), // if, reduce: Expression4
			nil,        // else
			reduce(27), // while, reduce: Expression4
			reduce(27), // break, reduce: Expression4
			reduce(27), // func, reduce: Expression4
			reduce(27), // return, reduce: Expression4
		},
	},
	actionRow{ // S195
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(28), // and, reduce: Expression4
			reduce(28), // or, reduce: Expression4
			reduce(28), // +, reduce: Expression4
			reduce(28), // -, reduce: Expression4
			reduce(28), // *, reduce: Expression4
			reduce(28), // /, reduce: Expression4
			reduce(28), // !, reduce: Expression4
			reduce(28), // (, reduce: Expression4
			nil,        // )
			reduce(28), // id, reduce: Expression4
			reduce(28), // int_lit, reduce: Expression4
			reduce(28), // string_lit, reduce: Expression4
			reduce(28), // true, reduce: Expression4
			reduce(28), // false, reduce: Expression4
			reduce(28), // nil, reduce: Expression4
			nil,        // ,
			reduce(28), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			reduce(28), // }, reduce: Expression4
			reduce(28), // if, reduce: Expression4
			nil,        // else
			reduce(28), // while, reduce: Expression4
			reduce(28), // break, reduce: Expression4
			reduce(28), // func, reduce: Expression4
			reduce(28), // return, reduce: Expression4
		},
	},
	actionRow{ // S196
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(29), // and, reduce: Expression4
			reduce(29), // or, reduce: Expression4
			reduce(29), // +, reduce: Expression4
			reduce(29), // -, reduce: Expression4
			reduce(29), // *, reduce: Expression4
			reduce(29), // /, reduce: Expression4
			reduce(29), // !, reduce: Expression4
			reduce(29), // (, reduce: Expression4
			nil,        // )
			reduce(29), // id, reduce: Expression4
			reduce(29), // int_lit, reduce: Expression4
			reduce(29), // string_lit, reduce: Expression4
			reduce(29), // true, reduce: Expression4
			reduce(29), // false, reduce: Expression4
			reduce(29), // nil, reduce: Expression4
			nil,        // ,
			reduce(29), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			reduce(29), // }, reduce: Expression4
			reduce(29), // if, reduce: Expression4
			nil,        // else
			reduce(29), // while, reduce: Expression4
			reduce(29), // break, reduce: Expression4
			reduce(29), // func, reduce: Expression4
			reduce(29), // return, reduce: Expression4
		},
	},
	actionRow{ // S197
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(30), // and, reduce: Expression4
			reduce(30), // or, reduce: Expression4
			reduce(30), // +, reduce: Expression4
			reduce(30), // -, reduce: Expression4
			reduce(30), // *, reduce: Expression4
			reduce(30), // /, reduce: Expression4
			reduce(30), // !, reduce: Expression4
			reduce(30), // (, reduce: Expression4
			nil,        // )
			reduce(30), // id, reduce: Expression4
			reduce(30), // int_lit, reduce: Expression4
			reduce(30), // string_lit, reduce: Expression4
			reduce(30), // true, reduce: Expression4
			reduce(30), // false, reduce: Expression4
			reduce(30), // nil, reduce: Expression4
			nil,        // ,
			reduce(30), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			reduce(30), // }, reduce: Expression4
			reduce(30), // if, reduce: Expression4
			nil,        // else
			reduce(30), // while, reduce: Expression4
			reduce(30), // break, reduce: Expression4
			reduce(30), // func, reduce: Expression4
			reduce(30), // return, reduce: Expression4
		},
	},
	actionRow{ // S198
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(31), // and, reduce: Expression4
			reduce(31), // or, reduce: Expression4
			reduce(31), // +, reduce: Expression4
			reduce(31), // -, reduce: Expression4
			reduce(31), // *, reduce: Expression4
			reduce(31), // /, reduce: Expression4
			reduce(31), // !, reduce: Expression4
			reduce(31), // (, reduce: Expression4
			nil,        // )
			reduce(31), // id, reduce: Expression4
			reduce(31), // int_lit, reduce: Expression4
			reduce(31), // string_lit, reduce: Expression4
			reduce(31), // true, reduce: Expression4
			reduce(31), // false, reduce: Expression4
			reduce(31), // nil, reduce: Expression4
			nil,        // ,
			reduce(31), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			reduce(31), // }, reduce: Expression4
			reduce(31), // if, reduce: Expression4
			nil,        // else
			reduce(31), // while, reduce: Expression4
			reduce(31), // break, reduce: Expression4
			reduce(31), // func, reduce: Expression4
			reduce(31), // return, reduce: Expression4
		},
	},
	actionRow{ // S199
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(32), // and, reduce: Expression4
			reduce(32), // or, reduce: Expression4
			reduce(32), // +, reduce: Expression4
			reduce(32), // -, reduce: Expression4
			reduce(32), // *, reduce: Expression4
			reduce(32), // /, reduce: Expression4
			reduce(32), // !, reduce: Expression4
			reduce(32), // (, reduce: Expression4
			nil,        // )
			reduce(32), // id, reduce: Expression4
			reduce(32), // int_lit, reduce: Expression4
			reduce(32), // string_lit, reduce: Expression4
			reduce(32), // true, reduce: Expression4
			reduce(32), // false, reduce: Expression4
			reduce(32), // nil, reduce: Expression4
			nil,        // ,
			reduce(32), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			reduce(32), // }, reduce: Expression4
			reduce(32), // if, reduce: Expression4
			nil,        // else
			reduce(32), // while, reduce: Expression4
			reduce(32), // break, reduce: Expression4
			reduce(32), // func, reduce: Expression4
			reduce(32), // return, reduce: Expression4
		},
	},
	actionRow{ // S200
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(33), // and, reduce: Expression4
			reduce(33), // or, reduce: Expression4
			reduce(33), // +, reduce: Expression4
			reduce(33), // -, reduce: Expression4
			reduce(33), // *, reduce: Expression4
			reduce(33), // /, reduce: Expression4
			reduce(33), // !, reduce: Expression4
			reduce(33), // (, reduce: Expression4
			nil,        // )
			reduce(33), // id, reduce: Expression4
			reduce(33), // int_lit, reduce: Expression4
			reduce(33), // string_lit, reduce: Expression4
			reduce(33), // true, reduce: Expression4
			reduce(33), // false, reduce: Expression4
			reduce(33), // nil, reduce: Expression4
			nil,        // ,
			reduce(33), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			reduce(33), // }, reduce: Expression4
			reduce(33), // if, reduce: Expression4
			nil,        // else
			reduce(33), // while, reduce: Expression4
			reduce(33), // break, reduce: Expression4
			reduce(33), // func, reduce: Expression4
			reduce(33), // return, reduce: Expression4
		},
	},
	actionRow{ // S201
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(201), // !
			shift(202), // (
			nil,        // )
			shift(240), // id
			shift(204), // int_lit
			shift(205), // string_lit
			shift(206), // true
			shift(207), // false
			shift(208), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S202
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // !
			shift(61), // (
			nil,       // )
			shift(62), // id
			shift(63), // int_lit
			shift(64), // string_lit
			shift(65), // true
			shift(66), // false
			shift(67), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S203
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(36), // and, reduce: Identifier
			reduce(36), // or, reduce: Identifier
			reduce(36), // +, reduce: Identifier
			reduce(36), // -, reduce: Identifier
			reduce(36), // *, reduce: Identifier
			reduce(36), // /, reduce: Identifier
			reduce(36), // !, reduce: Identifier
			shift(242), // (
			nil,        // )
			reduce(36), // id, reduce: Identifier
			reduce(36), // int_lit, reduce: Identifier
			reduce(36), // string_lit, reduce: Identifier
			reduce(36), // true, reduce: Identifier
			reduce(36), // false, reduce: Identifier
			reduce(36), // nil, reduce: Identifier
			nil,        // ,
			reduce(36), // var, reduce: Identifier
			shift(243), // =
			nil,        // {
			reduce(36), // }, reduce: Identifier
			reduce(36), // if, reduce: Identifier
			nil,        // else
			reduce(36), // while, reduce: Identifier
			reduce(36), // break, reduce: Identifier
			reduce(36), // func, reduce: Identifier
			reduce(36), // return, reduce: Identifier
		},
	},
	actionRow{ // S204
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(37), // and, reduce: IntegerLiteral
			reduce(37), // or, reduce: IntegerLiteral
			reduce(37), // +, reduce: IntegerLiteral
			reduce(37), // -, reduce: IntegerLiteral
			reduce(37), // *, reduce: IntegerLiteral
			reduce(37), // /, reduce: IntegerLiteral
			reduce(37), // !, reduce: IntegerLiteral
			reduce(37), // (, reduce: IntegerLiteral
			nil,        // )
			reduce(37), // id, reduce: IntegerLiteral
			reduce(37), // int_lit, reduce: IntegerLiteral
			reduce(37), // string_lit, reduce: IntegerLiteral
			reduce(37), // true, reduce: IntegerLiteral
			reduce(37), // false, reduce: IntegerLiteral
			reduce(37), // nil, reduce: IntegerLiteral
			nil,        // ,
			reduce(37), // var, reduce: IntegerLiteral
			nil,        // =
			nil,        // {
			reduce(37), // }, reduce: IntegerLiteral
			reduce(37), // if, reduce: IntegerLiteral
			nil,        // else
			reduce(37), // while, reduce: IntegerLiteral
			reduce(37), // break, reduce: IntegerLiteral
			reduce(37), // func, reduce: IntegerLiteral
			reduce(37), // return, reduce: IntegerLiteral
		},
	},
	actionRow{ // S205
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(38), // and, reduce: StringLiteral
			reduce(38), // or, reduce: StringLiteral
			reduce(38), // +, reduce: StringLiteral
			reduce(38), // -, reduce: StringLiteral
			reduce(38), // *, reduce: StringLiteral
			reduce(38), // /, reduce: StringLiteral
			reduce(38), // !, reduce: StringLiteral
			reduce(38), // (, reduce: StringLiteral
			nil,        // )
			reduce(38), // id, reduce: StringLiteral
			reduce(38), // int_lit, reduce: StringLiteral
			reduce(38), // string_lit, reduce: StringLiteral
			reduce(38), // true, reduce: StringLiteral
			reduce(38), // false, reduce: StringLiteral
			reduce(38), // nil, reduce: StringLiteral
			nil,        // ,
			reduce(38), // var, reduce: StringLiteral
			nil,        // =
			nil,        // {
			reduce(38), // }, reduce: StringLiteral
			reduce(38), // if, reduce: StringLiteral
			nil,        // else
			reduce(38), // while, reduce: StringLiteral
			reduce(38), // break, reduce: StringLiteral
			reduce(38), // func, reduce: StringLiteral
			reduce(38), // return, reduce: StringLiteral
		},
	},
	actionRow{ // S206
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(39), // and, reduce: TrueLiteral
			reduce(39), // or, reduce: TrueLiteral
			reduce(39), // +, reduce: TrueLiteral
			reduce(39), // -, reduce: TrueLiteral
			reduce(39), // *, reduce: TrueLiteral
			reduce(39), // /, reduce: TrueLiteral
			reduce(39), // !, reduce: TrueLiteral
			reduce(39), // (, reduce: TrueLiteral
			nil,        // )
			reduce(39), // id, reduce: TrueLiteral
			reduce(39), // int_lit, reduce: TrueLiteral
			reduce(39), // string_lit, reduce: TrueLiteral
			reduce(39), // true, reduce: TrueLiteral
			reduce(39), // false, reduce: TrueLiteral
			reduce(39), // nil, reduce: TrueLiteral
			nil,        // ,
			reduce(39), // var, reduce: TrueLiteral
			nil,        // =
			nil,        // {
			reduce(39), // }, reduce: TrueLiteral
			reduce(39), // if, reduce: TrueLiteral
			nil,        // else
			reduce(39), // while, reduce: TrueLiteral
			reduce(39), // break, reduce: TrueLiteral
			reduce(39), // func, reduce: TrueLiteral
			reduce(39), // return, reduce: TrueLiteral
		},
	},
	actionRow{ // S207
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(40), // and, reduce: FalseLiteral
			reduce(40), // or, reduce: FalseLiteral
			reduce(40), // +, reduce: FalseLiteral
			reduce(40), // -, reduce: FalseLiteral
			reduce(40), // *, reduce: FalseLiteral
			reduce(40), // /, reduce: FalseLiteral
			reduce(40), // !, reduce: FalseLiteral
			reduce(40), // (, reduce: FalseLiteral
			nil,        // )
			reduce(40), // id, reduce: FalseLiteral
			reduce(40), // int_lit, reduce: FalseLiteral
			reduce(40), // string_lit, reduce: FalseLiteral
			reduce(40), // true, reduce: FalseLiteral
			reduce(40), // false, reduce: FalseLiteral
			reduce(40), // nil, reduce: FalseLiteral
			nil,        // ,
			reduce(40), // var, reduce: FalseLiteral
			nil,        // =
			nil,        // {
			reduce(40), // }, reduce: FalseLiteral
			reduce(40), // if, reduce: FalseLiteral
			nil,        // else
			reduce(40), // while, reduce: FalseLiteral
			reduce(40), // break, reduce: FalseLiteral
			reduce(40), // func, reduce: FalseLiteral
			reduce(40), // return, reduce: FalseLiteral
		},
	},
	actionRow{ // S208
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(41), // and, reduce: NilLiteral
			reduce(41), // or, reduce: NilLiteral
			reduce(41), // +, reduce: NilLiteral
			reduce(41), // -, reduce: NilLiteral
			reduce(41), // *, reduce: NilLiteral
			reduce(41), // /, reduce: NilLiteral
			reduce(41), // !, reduce: NilLiteral
			reduce(41), // (, reduce: NilLiteral
			nil,        // )
			reduce(41), // id, reduce: NilLiteral
			reduce(41), // int_lit, reduce: NilLiteral
			reduce(41), // string_lit, reduce: NilLiteral
			reduce(41), // true, reduce: NilLiteral
			reduce(41), // false, reduce: NilLiteral
			reduce(41), // nil, reduce: NilLiteral
			nil,        // ,
			reduce(41), // var, reduce: NilLiteral
			nil,        // =
			nil,        // {
			reduce(41), // }, reduce: NilLiteral
			reduce(41), // if, reduce: NilLiteral
			nil,        // else
			reduce(41), // while, reduce: NilLiteral
			reduce(41), // break, reduce: NilLiteral
			reduce(41), // func, reduce: NilLiteral
			reduce(41), // return, reduce: NilLiteral
		},
	},
	actionRow{ // S209
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			shift(244), // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S210
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(83), // !
			shift(84), // (
			nil,       // )
			shift(85), // id
			shift(86), // int_lit
			shift(87), // string_lit
			shift(88), // true
			shift(89), // false
			shift(90), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S211
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(83), // !
			shift(84), // (
			nil,       // )
			shift(85), // id
			shift(86), // int_lit
			shift(87), // string_lit
			shift(88), // true
			shift(89), // false
			shift(90), // nil
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // break
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S212
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(56), // !, reduce: Break
			reduce(56), // (, reduce: Break
			nil,        // )
			reduce(56), // id, reduce: Break
			reduce(56), // int_lit, reduce: Break
			reduce(56), // string_lit, reduce: Break
			reduce(56), // true, reduce: Break
			reduce(56), // false, reduce: Break
			reduce(56), // nil, reduce: Break
			nil,        // ,
			reduce(56), // var, reduce: Break
			nil,        // =
			nil,        // {
			reduce(56), // }, reduce: Break
			reduce(56), // if, reduce: Break
			nil,        // else
			reduce(56), // while, reduce: Break
			reduce(56), // break, reduce: Break
			reduce(56), // func, reduce: Break
			reduce(56), // return, reduce: Break
		},
	},
	actionRow{ // S213
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			shift(247), // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S214
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(201), // !
			shift(202), // (
			nil,        // )
			shift(240), // id
			shift(204), // int_lit
			shift(205), // string_lit
			shift(206), // true
			shift(207), // false
			shift(208), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S215
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			shift(249), // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S216
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			shift(147), // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S217
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(42), // and, reduce: FunctionCall
			reduce(42), // or, reduce: FunctionCall
			reduce(42), // +, reduce: FunctionCall
			reduce(42), // -, reduce: FunctionCall
			reduce(42), // *, reduce: FunctionCall
			reduce(42), // /, reduce: FunctionCall
			nil,        // !
			nil,        // (
			reduce(42), // ), reduce: FunctionCall
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S218
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(19), // and, reduce: Expression1
			reduce(19), // or, reduce: Expression1
			shift(159), // +
			shift(160), // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			reduce(19), // ), reduce: Expression1
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(19), // ,, reduce: Expression1
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S219
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(20), // and, reduce: Expression1
			reduce(20), // or, reduce: Expression1
			shift(159), // +
			shift(160), // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			reduce(20), // ), reduce: Expression1
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(20), // ,, reduce: Expression1
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S220
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(22), // and, reduce: Expression2
			reduce(22), // or, reduce: Expression2
			reduce(22), // +, reduce: Expression2
			reduce(22), // -, reduce: Expression2
			shift(161), // *
			shift(162), // /
			nil,        // !
			nil,        // (
			reduce(22), // ), reduce: Expression2
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(22), // ,, reduce: Expression2
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S221
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(23), // and, reduce: Expression2
			reduce(23), // or, reduce: Expression2
			reduce(23), // +, reduce: Expression2
			reduce(23), // -, reduce: Expression2
			shift(161), // *
			shift(162), // /
			nil,        // !
			nil,        // (
			reduce(23), // ), reduce: Expression2
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(23), // ,, reduce: Expression2
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S222
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(25), // and, reduce: Expression3
			reduce(25), // or, reduce: Expression3
			reduce(25), // +, reduce: Expression3
			reduce(25), // -, reduce: Expression3
			reduce(25), // *, reduce: Expression3
			reduce(25), // /, reduce: Expression3
			nil,        // !
			nil,        // (
			reduce(25), // ), reduce: Expression3
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(25), // ,, reduce: Expression3
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S223
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(26), // and, reduce: Expression3
			reduce(26), // or, reduce: Expression3
			reduce(26), // +, reduce: Expression3
			reduce(26), // -, reduce: Expression3
			reduce(26), // *, reduce: Expression3
			reduce(26), // /, reduce: Expression3
			nil,        // !
			nil,        // (
			reduce(26), // ), reduce: Expression3
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(26), // ,, reduce: Expression3
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S224
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(35), // and, reduce: Expression4
			reduce(35), // or, reduce: Expression4
			reduce(35), // +, reduce: Expression4
			reduce(35), // -, reduce: Expression4
			reduce(35), // *, reduce: Expression4
			reduce(35), // /, reduce: Expression4
			nil,        // !
			nil,        // (
			reduce(35), // ), reduce: Expression4
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(35), // ,, reduce: Expression4
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S225
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			shift(251), // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S226
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			reduce(46), // ), reduce: ArgumentList
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(46), // ,, reduce: ArgumentList
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S227
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(42), // and, reduce: FunctionCall
			reduce(42), // or, reduce: FunctionCall
			reduce(42), // +, reduce: FunctionCall
			reduce(42), // -, reduce: FunctionCall
			reduce(42), // *, reduce: FunctionCall
			reduce(42), // /, reduce: FunctionCall
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(42), // {, reduce: FunctionCall
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S228
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(53), // ␚, reduce: IfElse
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(53), // !, reduce: IfElse
			reduce(53), // (, reduce: IfElse
			nil,        // )
			reduce(53), // id, reduce: IfElse
			reduce(53), // int_lit, reduce: IfElse
			reduce(53), // string_lit, reduce: IfElse
			reduce(53), // true, reduce: IfElse
			reduce(53), // false, reduce: IfElse
			reduce(53), // nil, reduce: IfElse
			nil,        // ,
			reduce(53), // var, reduce: IfElse
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(53), // if, reduce: IfElse
			nil,        // else
			reduce(53), // while, reduce: IfElse
			reduce(53), // break, reduce: IfElse
			reduce(53), // func, reduce: IfElse
			reduce(53), // return, reduce: IfElse
		},
	},
	actionRow{ // S229
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(54), // ␚, reduce: IfElse
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(54), // !, reduce: IfElse
			reduce(54), // (, reduce: IfElse
			nil,        // )
			reduce(54), // id, reduce: IfElse
			reduce(54), // int_lit, reduce: IfElse
			reduce(54), // string_lit, reduce: IfElse
			reduce(54), // true, reduce: IfElse
			reduce(54), // false, reduce: IfElse
			reduce(54), // nil, reduce: IfElse
			nil,        // ,
			reduce(54), // var, reduce: IfElse
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(54), // if, reduce: IfElse
			nil,        // else
			reduce(54), // while, reduce: IfElse
			reduce(54), // break, reduce: IfElse
			reduce(54), // func, reduce: IfElse
			reduce(54), // return, reduce: IfElse
		},
	},
	actionRow{ // S230
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(52), // ␚, reduce: IfElse
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(52), // !, reduce: IfElse
			reduce(52), // (, reduce: IfElse
			nil,        // )
			reduce(52), // id, reduce: IfElse
			reduce(52), // int_lit, reduce: IfElse
			reduce(52), // string_lit, reduce: IfElse
			reduce(52), // true, reduce: IfElse
			reduce(52), // false, reduce: IfElse
			reduce(52), // nil, reduce: IfElse
			nil,        // ,
			reduce(52), // var, reduce: IfElse
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(52), // if, reduce: IfElse
			nil,        // else
			reduce(52), // while, reduce: IfElse
			reduce(52), // break, reduce: IfElse
			reduce(52), // func, reduce: IfElse
			reduce(52), // return, reduce: IfElse
		},
	},
	actionRow{ // S231
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(49), // ␚, reduce: Block
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(49), // !, reduce: Block
			reduce(49), // (, reduce: Block
			nil,        // )
			reduce(49), // id, reduce: Block
			reduce(49), // int_lit, reduce: Block
			reduce(49), // string_lit, reduce: Block
			reduce(49), // true, reduce: Block
			reduce(49), // false, reduce: Block
			reduce(49), // nil, reduce: Block
			nil,        // ,
			reduce(49), // var, reduce: Block
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(49), // if, reduce: Block
			reduce(49), // else, reduce: Block
			reduce(49), // while, reduce: Block
			reduce(49), // break, reduce: Block
			reduce(49), // func, reduce: Block
			reduce(49), // return, reduce: Block
		},
	},
	actionRow{ // S232
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // and
			nil,       // or
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			reduce(5), // !, reduce: StatementList
			reduce(5), // (, reduce: StatementList
			nil,       // )
			reduce(5), // id, reduce: StatementList
			reduce(5), // int_lit, reduce: StatementList
			reduce(5), // string_lit, reduce: StatementList
			reduce(5), // true, reduce: StatementList
			reduce(5), // false, reduce: StatementList
			reduce(5), // nil, reduce: StatementList
			nil,       // ,
			reduce(5), // var, reduce: StatementList
			nil,       // =
			nil,       // {
			reduce(5), // }, reduce: StatementList
			reduce(5), // if, reduce: StatementList
			nil,       // else
			reduce(5), // while, reduce: StatementList
			reduce(5), // break, reduce: StatementList
			reduce(5), // func, reduce: StatementList
			reduce(5), // return, reduce: StatementList
		},
	},
	actionRow{ // S233
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(201), // !
			shift(202), // (
			nil,        // )
			shift(240), // id
			shift(204), // int_lit
			shift(205), // string_lit
			shift(206), // true
			shift(207), // false
			shift(208), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S234
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(201), // !
			shift(202), // (
			nil,        // )
			shift(240), // id
			shift(204), // int_lit
			shift(205), // string_lit
			shift(206), // true
			shift(207), // false
			shift(208), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S235
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(201), // !
			shift(202), // (
			nil,        // )
			shift(240), // id
			shift(204), // int_lit
			shift(205), // string_lit
			shift(206), // true
			shift(207), // false
			shift(208), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S236
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(201), // !
			shift(202), // (
			nil,        // )
			shift(240), // id
			shift(204), // int_lit
			shift(205), // string_lit
			shift(206), // true
			shift(207), // false
			shift(208), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S237
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(201), // !
			shift(202), // (
			nil,        // )
			shift(240), // id
			shift(204), // int_lit
			shift(205), // string_lit
			shift(206), // true
			shift(207), // false
			shift(208), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S238
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(201), // !
			shift(202), // (
			nil,        // )
			shift(240), // id
			shift(204), // int_lit
			shift(205), // string_lit
			shift(206), // true
			shift(207), // false
			shift(208), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S239
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(34), // and, reduce: Expression4
			reduce(34), // or, reduce: Expression4
			reduce(34), // +, reduce: Expression4
			reduce(34), // -, reduce: Expression4
			reduce(34), // *, reduce: Expression4
			reduce(34), // /, reduce: Expression4
			reduce(34), // !, reduce: Expression4
			reduce(34), // (, reduce: Expression4
			nil,        // )
			reduce(34), // id, reduce: Expression4
			reduce(34), // int_lit, reduce: Expression4
			reduce(34), // string_lit, reduce: Expression4
			reduce(34), // true, reduce: Expression4
			reduce(34), // false, reduce: Expression4
			reduce(34), // nil, reduce: Expression4
			nil,        // ,
			reduce(34), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			reduce(34), // }, reduce: Expression4
			reduce(34), // if, reduce: Expression4
			nil,        // else
			reduce(34), // while, reduce: Expression4
			reduce(34), // break, reduce: Expression4
			reduce(34), // func, reduce: Expression4
			reduce(34), // return, reduce: Expression4
		},
	},
	actionRow{ // S240
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(36), // and, reduce: Identifier
			reduce(36), // or, reduce: Identifier
			reduce(36), // +, reduce: Identifier
			reduce(36), // -, reduce: Identifier
			reduce(36), // *, reduce: Identifier
			reduce(36), // /, reduce: Identifier
			reduce(36), // !, reduce: Identifier
			shift(242), // (
			nil,        // )
			reduce(36), // id, reduce: Identifier
			reduce(36), // int_lit, reduce: Identifier
			reduce(36), // string_lit, reduce: Identifier
			reduce(36), // true, reduce: Identifier
			reduce(36), // false, reduce: Identifier
			reduce(36), // nil, reduce: Identifier
			nil,        // ,
			reduce(36), // var, reduce: Identifier
			nil,        // =
			nil,        // {
			reduce(36), // }, reduce: Identifier
			reduce(36), // if, reduce: Identifier
			nil,        // else
			reduce(36), // while, reduce: Identifier
			reduce(36), // break, reduce: Identifier
			reduce(36), // func, reduce: Identifier
			reduce(36), // return, reduce: Identifier
		},
	},
	actionRow{ // S241
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			shift(258), // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S242
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(123), // !
			shift(124), // (
			reduce(43), // ), reduce: Arguments
			shift(125), // id
			shift(126), // int_lit
			shift(127), // string_lit
			shift(128), // true
			shift(129), // false
			shift(130), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S243
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(201), // !
			shift(202), // (
			nil,        // )
			shift(240), // id
			shift(204), // int_lit
			shift(205), // string_lit
			shift(206), // true
			shift(207), // false
			shift(208), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S244
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			shift(261), // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S245
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			shift(263), // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S246
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			shift(265), // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S247
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			shift(266), // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S248
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(58), // !, reduce: Return
			reduce(58), // (, reduce: Return
			nil,        // )
			reduce(58), // id, reduce: Return
			reduce(58), // int_lit, reduce: Return
			reduce(58), // string_lit, reduce: Return
			reduce(58), // true, reduce: Return
			reduce(58), // false, reduce: Return
			reduce(58), // nil, reduce: Return
			nil,        // ,
			reduce(58), // var, reduce: Return
			nil,        // =
			nil,        // {
			reduce(58), // }, reduce: Return
			reduce(58), // if, reduce: Return
			nil,        // else
			reduce(58), // while, reduce: Return
			reduce(58), // break, reduce: Return
			reduce(58), // func, reduce: Return
			reduce(58), // return, reduce: Return
		},
	},
	actionRow{ // S249
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(49), // ␚, reduce: Block
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(49), // !, reduce: Block
			reduce(49), // (, reduce: Block
			nil,        // )
			reduce(49), // id, reduce: Block
			reduce(49), // int_lit, reduce: Block
			reduce(49), // string_lit, reduce: Block
			reduce(49), // true, reduce: Block
			reduce(49), // false, reduce: Block
			reduce(49), // nil, reduce: Block
			nil,        // ,
			reduce(49), // var, reduce: Block
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(49), // if, reduce: Block
			nil,        // else
			reduce(49), // while, reduce: Block
			reduce(49), // break, reduce: Block
			reduce(49), // func, reduce: Block
			reduce(49), // return, reduce: Block
		},
	},
	actionRow{ // S250
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(57), // ␚, reduce: FunctionDefine
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(57), // !, reduce: FunctionDefine
			reduce(57), // (, reduce: FunctionDefine
			nil,        // )
			reduce(57), // id, reduce: FunctionDefine
			reduce(57), // int_lit, reduce: FunctionDefine
			reduce(57), // string_lit, reduce: FunctionDefine
			reduce(57), // true, reduce: FunctionDefine
			reduce(57), // false, reduce: FunctionDefine
			reduce(57), // nil, reduce: FunctionDefine
			nil,        // ,
			reduce(57), // var, reduce: FunctionDefine
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(57), // if, reduce: FunctionDefine
			nil,        // else
			reduce(57), // while, reduce: FunctionDefine
			reduce(57), // break, reduce: FunctionDefine
			reduce(57), // func, reduce: FunctionDefine
			reduce(57), // return, reduce: FunctionDefine
		},
	},
	actionRow{ // S251
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(42), // and, reduce: FunctionCall
			reduce(42), // or, reduce: FunctionCall
			reduce(42), // +, reduce: FunctionCall
			reduce(42), // -, reduce: FunctionCall
			reduce(42), // *, reduce: FunctionCall
			reduce(42), // /, reduce: FunctionCall
			nil,        // !
			nil,        // (
			reduce(42), // ), reduce: FunctionCall
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			reduce(42), // ,, reduce: FunctionCall
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S252
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(19), // and, reduce: Expression1
			reduce(19), // or, reduce: Expression1
			shift(235), // +
			shift(236), // -
			nil,        // *
			nil,        // /
			reduce(19), // !, reduce: Expression1
			reduce(19), // (, reduce: Expression1
			nil,        // )
			reduce(19), // id, reduce: Expression1
			reduce(19), // int_lit, reduce: Expression1
			reduce(19), // string_lit, reduce: Expression1
			reduce(19), // true, reduce: Expression1
			reduce(19), // false, reduce: Expression1
			reduce(19), // nil, reduce: Expression1
			nil,        // ,
			reduce(19), // var, reduce: Expression1
			nil,        // =
			nil,        // {
			reduce(19), // }, reduce: Expression1
			reduce(19), // if, reduce: Expression1
			nil,        // else
			reduce(19), // while, reduce: Expression1
			reduce(19), // break, reduce: Expression1
			reduce(19), // func, reduce: Expression1
			reduce(19), // return, reduce: Expression1
		},
	},
	actionRow{ // S253
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(20), // and, reduce: Expression1
			reduce(20), // or, reduce: Expression1
			shift(235), // +
			shift(236), // -
			nil,        // *
			nil,        // /
			reduce(20), // !, reduce: Expression1
			reduce(20), // (, reduce: Expression1
			nil,        // )
			reduce(20), // id, reduce: Expression1
			reduce(20), // int_lit, reduce: Expression1
			reduce(20), // string_lit, reduce: Expression1
			reduce(20), // true, reduce: Expression1
			reduce(20), // false, reduce: Expression1
			reduce(20), // nil, reduce: Expression1
			nil,        // ,
			reduce(20), // var, reduce: Expression1
			nil,        // =
			nil,        // {
			reduce(20), // }, reduce: Expression1
			reduce(20), // if, reduce: Expression1
			nil,        // else
			reduce(20), // while, reduce: Expression1
			reduce(20), // break, reduce: Expression1
			reduce(20), // func, reduce: Expression1
			reduce(20), // return, reduce: Expression1
		},
	},
	actionRow{ // S254
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(22), // and, reduce: Expression2
			reduce(22), // or, reduce: Expression2
			reduce(22), // +, reduce: Expression2
			reduce(22), // -, reduce: Expression2
			shift(237), // *
			shift(238), // /
			reduce(22), // !, reduce: Expression2
			reduce(22), // (, reduce: Expression2
			nil,        // )
			reduce(22), // id, reduce: Expression2
			reduce(22), // int_lit, reduce: Expression2
			reduce(22), // string_lit, reduce: Expression2
			reduce(22), // true, reduce: Expression2
			reduce(22), // false, reduce: Expression2
			reduce(22), // nil, reduce: Expression2
			nil,        // ,
			reduce(22), // var, reduce: Expression2
			nil,        // =
			nil,        // {
			reduce(22), // }, reduce: Expression2
			reduce(22), // if, reduce: Expression2
			nil,        // else
			reduce(22), // while, reduce: Expression2
			reduce(22), // break, reduce: Expression2
			reduce(22), // func, reduce: Expression2
			reduce(22), // return, reduce: Expression2
		},
	},
	actionRow{ // S255
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(23), // and, reduce: Expression2
			reduce(23), // or, reduce: Expression2
			reduce(23), // +, reduce: Expression2
			reduce(23), // -, reduce: Expression2
			shift(237), // *
			shift(238), // /
			reduce(23), // !, reduce: Expression2
			reduce(23), // (, reduce: Expression2
			nil,        // )
			reduce(23), // id, reduce: Expression2
			reduce(23), // int_lit, reduce: Expression2
			reduce(23), // string_lit, reduce: Expression2
			reduce(23), // true, reduce: Expression2
			reduce(23), // false, reduce: Expression2
			reduce(23), // nil, reduce: Expression2
			nil,        // ,
			reduce(23), // var, reduce: Expression2
			nil,        // =
			nil,        // {
			reduce(23), // }, reduce: Expression2
			reduce(23), // if, reduce: Expression2
			nil,        // else
			reduce(23), // while, reduce: Expression2
			reduce(23), // break, reduce: Expression2
			reduce(23), // func, reduce: Expression2
			reduce(23), // return, reduce: Expression2
		},
	},
	actionRow{ // S256
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(25), // and, reduce: Expression3
			reduce(25), // or, reduce: Expression3
			reduce(25), // +, reduce: Expression3
			reduce(25), // -, reduce: Expression3
			reduce(25), // *, reduce: Expression3
			reduce(25), // /, reduce: Expression3
			reduce(25), // !, reduce: Expression3
			reduce(25), // (, reduce: Expression3
			nil,        // )
			reduce(25), // id, reduce: Expression3
			reduce(25), // int_lit, reduce: Expression3
			reduce(25), // string_lit, reduce: Expression3
			reduce(25), // true, reduce: Expression3
			reduce(25), // false, reduce: Expression3
			reduce(25), // nil, reduce: Expression3
			nil,        // ,
			reduce(25), // var, reduce: Expression3
			nil,        // =
			nil,        // {
			reduce(25), // }, reduce: Expression3
			reduce(25), // if, reduce: Expression3
			nil,        // else
			reduce(25), // while, reduce: Expression3
			reduce(25), // break, reduce: Expression3
			reduce(25), // func, reduce: Expression3
			reduce(25), // return, reduce: Expression3
		},
	},
	actionRow{ // S257
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(26), // and, reduce: Expression3
			reduce(26), // or, reduce: Expression3
			reduce(26), // +, reduce: Expression3
			reduce(26), // -, reduce: Expression3
			reduce(26), // *, reduce: Expression3
			reduce(26), // /, reduce: Expression3
			reduce(26), // !, reduce: Expression3
			reduce(26), // (, reduce: Expression3
			nil,        // )
			reduce(26), // id, reduce: Expression3
			reduce(26), // int_lit, reduce: Expression3
			reduce(26), // string_lit, reduce: Expression3
			reduce(26), // true, reduce: Expression3
			reduce(26), // false, reduce: Expression3
			reduce(26), // nil, reduce: Expression3
			nil,        // ,
			reduce(26), // var, reduce: Expression3
			nil,        // =
			nil,        // {
			reduce(26), // }, reduce: Expression3
			reduce(26), // if, reduce: Expression3
			nil,        // else
			reduce(26), // while, reduce: Expression3
			reduce(26), // break, reduce: Expression3
			reduce(26), // func, reduce: Expression3
			reduce(26), // return, reduce: Expression3
		},
	},
	actionRow{ // S258
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(35), // and, reduce: Expression4
			reduce(35), // or, reduce: Expression4
			reduce(35), // +, reduce: Expression4
			reduce(35), // -, reduce: Expression4
			reduce(35), // *, reduce: Expression4
			reduce(35), // /, reduce: Expression4
			reduce(35), // !, reduce: Expression4
			reduce(35), // (, reduce: Expression4
			nil,        // )
			reduce(35), // id, reduce: Expression4
			reduce(35), // int_lit, reduce: Expression4
			reduce(35), // string_lit, reduce: Expression4
			reduce(35), // true, reduce: Expression4
			reduce(35), // false, reduce: Expression4
			reduce(35), // nil, reduce: Expression4
			nil,        // ,
			reduce(35), // var, reduce: Expression4
			nil,        // =
			nil,        // {
			reduce(35), // }, reduce: Expression4
			reduce(35), // if, reduce: Expression4
			nil,        // else
			reduce(35), // while, reduce: Expression4
			reduce(35), // break, reduce: Expression4
			reduce(35), // func, reduce: Expression4
			reduce(35), // return, reduce: Expression4
		},
	},
	actionRow{ // S259
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			shift(267), // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S260
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(48), // !, reduce: Assign
			reduce(48), // (, reduce: Assign
			nil,        // )
			reduce(48), // id, reduce: Assign
			reduce(48), // int_lit, reduce: Assign
			reduce(48), // string_lit, reduce: Assign
			reduce(48), // true, reduce: Assign
			reduce(48), // false, reduce: Assign
			reduce(48), // nil, reduce: Assign
			nil,        // ,
			reduce(48), // var, reduce: Assign
			nil,        // =
			nil,        // {
			reduce(48), // }, reduce: Assign
			reduce(48), // if, reduce: Assign
			nil,        // else
			reduce(48), // while, reduce: Assign
			reduce(48), // break, reduce: Assign
			reduce(48), // func, reduce: Assign
			reduce(48), // return, reduce: Assign
		},
	},
	actionRow{ // S261
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(201), // !
			shift(202), // (
			nil,        // )
			shift(240), // id
			shift(204), // int_lit
			shift(205), // string_lit
			shift(206), // true
			shift(207), // false
			shift(208), // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S262
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(51), // !, reduce: If
			reduce(51), // (, reduce: If
			nil,        // )
			reduce(51), // id, reduce: If
			reduce(51), // int_lit, reduce: If
			reduce(51), // string_lit, reduce: If
			reduce(51), // true, reduce: If
			reduce(51), // false, reduce: If
			reduce(51), // nil, reduce: If
			nil,        // ,
			reduce(51), // var, reduce: If
			nil,        // =
			nil,        // {
			reduce(51), // }, reduce: If
			reduce(51), // if, reduce: If
			shift(269), // else
			reduce(51), // while, reduce: If
			reduce(51), // break, reduce: If
			reduce(51), // func, reduce: If
			reduce(51), // return, reduce: If
		},
	},
	actionRow{ // S263
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(201), // !
			shift(202), // (
			nil,        // )
			shift(203), // id
			shift(204), // int_lit
			shift(205), // string_lit
			shift(206), // true
			shift(207), // false
			shift(208), // nil
			nil,        // ,
			shift(209), // var
			nil,        // =
			nil,        // {
			reduce(2),  // }, reduce: Statements
			shift(210), // if
			nil,        // else
			shift(211), // while
			shift(212), // break
			shift(213), // func
			shift(214), // return
		},
	},
	actionRow{ // S264
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(55), // !, reduce: While
			reduce(55), // (, reduce: While
			nil,        // )
			reduce(55), // id, reduce: While
			reduce(55), // int_lit, reduce: While
			reduce(55), // string_lit, reduce: While
			reduce(55), // true, reduce: While
			reduce(55), // false, reduce: While
			reduce(55), // nil, reduce: While
			nil,        // ,
			reduce(55), // var, reduce: While
			nil,        // =
			nil,        // {
			reduce(55), // }, reduce: While
			reduce(55), // if, reduce: While
			nil,        // else
			reduce(55), // while, reduce: While
			reduce(55), // break, reduce: While
			reduce(55), // func, reduce: While
			reduce(55), // return, reduce: While
		},
	},
	actionRow{ // S265
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(201), // !
			shift(202), // (
			nil,        // )
			shift(203), // id
			shift(204), // int_lit
			shift(205), // string_lit
			shift(206), // true
			shift(207), // false
			shift(208), // nil
			nil,        // ,
			shift(209), // var
			nil,        // =
			nil,        // {
			reduce(2),  // }, reduce: Statements
			shift(210), // if
			nil,        // else
			shift(211), // while
			shift(212), // break
			shift(213), // func
			shift(214), // return
		},
	},
	actionRow{ // S266
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			shift(272), // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S267
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(42), // and, reduce: FunctionCall
			reduce(42), // or, reduce: FunctionCall
			reduce(42), // +, reduce: FunctionCall
			reduce(42), // -, reduce: FunctionCall
			reduce(42), // *, reduce: FunctionCall
			reduce(42), // /, reduce: FunctionCall
			reduce(42), // !, reduce: FunctionCall
			reduce(42), // (, reduce: FunctionCall
			nil,        // )
			reduce(42), // id, reduce: FunctionCall
			reduce(42), // int_lit, reduce: FunctionCall
			reduce(42), // string_lit, reduce: FunctionCall
			reduce(42), // true, reduce: FunctionCall
			reduce(42), // false, reduce: FunctionCall
			reduce(42), // nil, reduce: FunctionCall
			nil,        // ,
			reduce(42), // var, reduce: FunctionCall
			nil,        // =
			nil,        // {
			reduce(42), // }, reduce: FunctionCall
			reduce(42), // if, reduce: FunctionCall
			nil,        // else
			reduce(42), // while, reduce: FunctionCall
			reduce(42), // break, reduce: FunctionCall
			reduce(42), // func, reduce: FunctionCall
			reduce(42), // return, reduce: FunctionCall
		},
	},
	actionRow{ // S268
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(47), // !, reduce: Declare
			reduce(47), // (, reduce: Declare
			nil,        // )
			reduce(47), // id, reduce: Declare
			reduce(47), // int_lit, reduce: Declare
			reduce(47), // string_lit, reduce: Declare
			reduce(47), // true, reduce: Declare
			reduce(47), // false, reduce: Declare
			reduce(47), // nil, reduce: Declare
			nil,        // ,
			reduce(47), // var, reduce: Declare
			nil,        // =
			nil,        // {
			reduce(47), // }, reduce: Declare
			reduce(47), // if, reduce: Declare
			nil,        // else
			reduce(47), // while, reduce: Declare
			reduce(47), // break, reduce: Declare
			reduce(47), // func, reduce: Declare
			reduce(47), // return, reduce: Declare
		},
	},
	actionRow{ // S269
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			shift(265), // {
			nil,        // }
			shift(210), // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S270
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			shift(276), // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S271
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			shift(277), // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S272
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // !
			nil,        // (
			nil,        // )
			nil,        // id
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // nil
			nil,        // ,
			nil,        // var
			nil,        // =
			shift(265), // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // break
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S273
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(53), // !, reduce: IfElse
			reduce(53), // (, reduce: IfElse
			nil,        // )
			reduce(53), // id, reduce: IfElse
			reduce(53), // int_lit, reduce: IfElse
			reduce(53), // string_lit, reduce: IfElse
			reduce(53), // true, reduce: IfElse
			reduce(53), // false, reduce: IfElse
			reduce(53), // nil, reduce: IfElse
			nil,        // ,
			reduce(53), // var, reduce: IfElse
			nil,        // =
			nil,        // {
			reduce(53), // }, reduce: IfElse
			reduce(53), // if, reduce: IfElse
			nil,        // else
			reduce(53), // while, reduce: IfElse
			reduce(53), // break, reduce: IfElse
			reduce(53), // func, reduce: IfElse
			reduce(53), // return, reduce: IfElse
		},
	},
	actionRow{ // S274
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(54), // !, reduce: IfElse
			reduce(54), // (, reduce: IfElse
			nil,        // )
			reduce(54), // id, reduce: IfElse
			reduce(54), // int_lit, reduce: IfElse
			reduce(54), // string_lit, reduce: IfElse
			reduce(54), // true, reduce: IfElse
			reduce(54), // false, reduce: IfElse
			reduce(54), // nil, reduce: IfElse
			nil,        // ,
			reduce(54), // var, reduce: IfElse
			nil,        // =
			nil,        // {
			reduce(54), // }, reduce: IfElse
			reduce(54), // if, reduce: IfElse
			nil,        // else
			reduce(54), // while, reduce: IfElse
			reduce(54), // break, reduce: IfElse
			reduce(54), // func, reduce: IfElse
			reduce(54), // return, reduce: IfElse
		},
	},
	actionRow{ // S275
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(52), // !, reduce: IfElse
			reduce(52), // (, reduce: IfElse
			nil,        // )
			reduce(52), // id, reduce: IfElse
			reduce(52), // int_lit, reduce: IfElse
			reduce(52), // string_lit, reduce: IfElse
			reduce(52), // true, reduce: IfElse
			reduce(52), // false, reduce: IfElse
			reduce(52), // nil, reduce: IfElse
			nil,        // ,
			reduce(52), // var, reduce: IfElse
			nil,        // =
			nil,        // {
			reduce(52), // }, reduce: IfElse
			reduce(52), // if, reduce: IfElse
			nil,        // else
			reduce(52), // while, reduce: IfElse
			reduce(52), // break, reduce: IfElse
			reduce(52), // func, reduce: IfElse
			reduce(52), // return, reduce: IfElse
		},
	},
	actionRow{ // S276
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(49), // !, reduce: Block
			reduce(49), // (, reduce: Block
			nil,        // )
			reduce(49), // id, reduce: Block
			reduce(49), // int_lit, reduce: Block
			reduce(49), // string_lit, reduce: Block
			reduce(49), // true, reduce: Block
			reduce(49), // false, reduce: Block
			reduce(49), // nil, reduce: Block
			nil,        // ,
			reduce(49), // var, reduce: Block
			nil,        // =
			nil,        // {
			reduce(49), // }, reduce: Block
			reduce(49), // if, reduce: Block
			reduce(49), // else, reduce: Block
			reduce(49), // while, reduce: Block
			reduce(49), // break, reduce: Block
			reduce(49), // func, reduce: Block
			reduce(49), // return, reduce: Block
		},
	},
	actionRow{ // S277
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(49), // !, reduce: Block
			reduce(49), // (, reduce: Block
			nil,        // )
			reduce(49), // id, reduce: Block
			reduce(49), // int_lit, reduce: Block
			reduce(49), // string_lit, reduce: Block
			reduce(49), // true, reduce: Block
			reduce(49), // false, reduce: Block
			reduce(49), // nil, reduce: Block
			nil,        // ,
			reduce(49), // var, reduce: Block
			nil,        // =
			nil,        // {
			reduce(49), // }, reduce: Block
			reduce(49), // if, reduce: Block
			nil,        // else
			reduce(49), // while, reduce: Block
			reduce(49), // break, reduce: Block
			reduce(49), // func, reduce: Block
			reduce(49), // return, reduce: Block
		},
	},
	actionRow{ // S278
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // and
			nil,        // or
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(57), // !, reduce: FunctionDefine
			reduce(57), // (, reduce: FunctionDefine
			nil,        // )
			reduce(57), // id, reduce: FunctionDefine
			reduce(57), // int_lit, reduce: FunctionDefine
			reduce(57), // string_lit, reduce: FunctionDefine
			reduce(57), // true, reduce: FunctionDefine
			reduce(57), // false, reduce: FunctionDefine
			reduce(57), // nil, reduce: FunctionDefine
			nil,        // ,
			reduce(57), // var, reduce: FunctionDefine
			nil,        // =
			nil,        // {
			reduce(57), // }, reduce: FunctionDefine
			reduce(57), // if, reduce: FunctionDefine
			nil,        // else
			reduce(57), // while, reduce: FunctionDefine
			reduce(57), // break, reduce: FunctionDefine
			reduce(57), // func, reduce: FunctionDefine
			reduce(57), // return, reduce: FunctionDefine
		},
	},
}
