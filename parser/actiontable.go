// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(2), // ␚, reduce: Statements
			nil,       // empty
			shift(18), // int_lit
			shift(19), // string_lit
			shift(20), // true
			shift(21), // false
			shift(22), // id
			nil,       // (
			nil,       // )
			nil,       // ,
			shift(23), // var
			nil,       // =
			nil,       // {
			nil,       // }
			shift(24), // if
			nil,       // else
			shift(25), // while
			shift(26), // func
			shift(27), // return
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // ␚
			nil,          // empty
			nil,          // int_lit
			nil,          // string_lit
			nil,          // true
			nil,          // false
			nil,          // id
			nil,          // (
			nil,          // )
			nil,          // ,
			nil,          // var
			nil,          // =
			nil,          // {
			nil,          // }
			nil,          // if
			nil,          // else
			nil,          // while
			nil,          // func
			nil,          // return
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // ␚, reduce: Module
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			nil,       // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(3), // ␚, reduce: Statements
			nil,       // empty
			shift(18), // int_lit
			shift(19), // string_lit
			shift(20), // true
			shift(21), // false
			shift(22), // id
			nil,       // (
			nil,       // )
			nil,       // ,
			shift(23), // var
			nil,       // =
			nil,       // {
			nil,       // }
			shift(24), // if
			nil,       // else
			shift(25), // while
			shift(26), // func
			shift(27), // return
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(4), // ␚, reduce: StatementList
			nil,       // empty
			reduce(4), // int_lit, reduce: StatementList
			reduce(4), // string_lit, reduce: StatementList
			reduce(4), // true, reduce: StatementList
			reduce(4), // false, reduce: StatementList
			reduce(4), // id, reduce: StatementList
			nil,       // (
			nil,       // )
			nil,       // ,
			reduce(4), // var, reduce: StatementList
			nil,       // =
			nil,       // {
			nil,       // }
			reduce(4), // if, reduce: StatementList
			nil,       // else
			reduce(4), // while, reduce: StatementList
			reduce(4), // func, reduce: StatementList
			reduce(4), // return, reduce: StatementList
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(6), // ␚, reduce: Statement
			nil,       // empty
			reduce(6), // int_lit, reduce: Statement
			reduce(6), // string_lit, reduce: Statement
			reduce(6), // true, reduce: Statement
			reduce(6), // false, reduce: Statement
			reduce(6), // id, reduce: Statement
			nil,       // (
			nil,       // )
			nil,       // ,
			reduce(6), // var, reduce: Statement
			nil,       // =
			nil,       // {
			nil,       // }
			reduce(6), // if, reduce: Statement
			nil,       // else
			reduce(6), // while, reduce: Statement
			reduce(6), // func, reduce: Statement
			reduce(6), // return, reduce: Statement
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(7), // ␚, reduce: Statement
			nil,       // empty
			reduce(7), // int_lit, reduce: Statement
			reduce(7), // string_lit, reduce: Statement
			reduce(7), // true, reduce: Statement
			reduce(7), // false, reduce: Statement
			reduce(7), // id, reduce: Statement
			nil,       // (
			nil,       // )
			nil,       // ,
			reduce(7), // var, reduce: Statement
			nil,       // =
			nil,       // {
			nil,       // }
			reduce(7), // if, reduce: Statement
			nil,       // else
			reduce(7), // while, reduce: Statement
			reduce(7), // func, reduce: Statement
			reduce(7), // return, reduce: Statement
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(8), // ␚, reduce: Statement
			nil,       // empty
			reduce(8), // int_lit, reduce: Statement
			reduce(8), // string_lit, reduce: Statement
			reduce(8), // true, reduce: Statement
			reduce(8), // false, reduce: Statement
			reduce(8), // id, reduce: Statement
			nil,       // (
			nil,       // )
			nil,       // ,
			reduce(8), // var, reduce: Statement
			nil,       // =
			nil,       // {
			nil,       // }
			reduce(8), // if, reduce: Statement
			nil,       // else
			reduce(8), // while, reduce: Statement
			reduce(8), // func, reduce: Statement
			reduce(8), // return, reduce: Statement
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(9), // ␚, reduce: Statement
			nil,       // empty
			reduce(9), // int_lit, reduce: Statement
			reduce(9), // string_lit, reduce: Statement
			reduce(9), // true, reduce: Statement
			reduce(9), // false, reduce: Statement
			reduce(9), // id, reduce: Statement
			nil,       // (
			nil,       // )
			nil,       // ,
			reduce(9), // var, reduce: Statement
			nil,       // =
			nil,       // {
			nil,       // }
			reduce(9), // if, reduce: Statement
			nil,       // else
			reduce(9), // while, reduce: Statement
			reduce(9), // func, reduce: Statement
			reduce(9), // return, reduce: Statement
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(10), // ␚, reduce: Statement
			nil,        // empty
			reduce(10), // int_lit, reduce: Statement
			reduce(10), // string_lit, reduce: Statement
			reduce(10), // true, reduce: Statement
			reduce(10), // false, reduce: Statement
			reduce(10), // id, reduce: Statement
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(10), // var, reduce: Statement
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(10), // if, reduce: Statement
			nil,        // else
			reduce(10), // while, reduce: Statement
			reduce(10), // func, reduce: Statement
			reduce(10), // return, reduce: Statement
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(11), // ␚, reduce: Statement
			nil,        // empty
			reduce(11), // int_lit, reduce: Statement
			reduce(11), // string_lit, reduce: Statement
			reduce(11), // true, reduce: Statement
			reduce(11), // false, reduce: Statement
			reduce(11), // id, reduce: Statement
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(11), // var, reduce: Statement
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(11), // if, reduce: Statement
			nil,        // else
			reduce(11), // while, reduce: Statement
			reduce(11), // func, reduce: Statement
			reduce(11), // return, reduce: Statement
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(12), // ␚, reduce: Statement
			nil,        // empty
			reduce(12), // int_lit, reduce: Statement
			reduce(12), // string_lit, reduce: Statement
			reduce(12), // true, reduce: Statement
			reduce(12), // false, reduce: Statement
			reduce(12), // id, reduce: Statement
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(12), // var, reduce: Statement
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(12), // if, reduce: Statement
			nil,        // else
			reduce(12), // while, reduce: Statement
			reduce(12), // func, reduce: Statement
			reduce(12), // return, reduce: Statement
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(13), // ␚, reduce: Statement
			nil,        // empty
			reduce(13), // int_lit, reduce: Statement
			reduce(13), // string_lit, reduce: Statement
			reduce(13), // true, reduce: Statement
			reduce(13), // false, reduce: Statement
			reduce(13), // id, reduce: Statement
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(13), // var, reduce: Statement
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(13), // if, reduce: Statement
			nil,        // else
			reduce(13), // while, reduce: Statement
			reduce(13), // func, reduce: Statement
			reduce(13), // return, reduce: Statement
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(18), // ␚, reduce: Expression
			nil,        // empty
			reduce(18), // int_lit, reduce: Expression
			reduce(18), // string_lit, reduce: Expression
			reduce(18), // true, reduce: Expression
			reduce(18), // false, reduce: Expression
			reduce(18), // id, reduce: Expression
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(18), // var, reduce: Expression
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(18), // if, reduce: Expression
			nil,        // else
			reduce(18), // while, reduce: Expression
			reduce(18), // func, reduce: Expression
			reduce(18), // return, reduce: Expression
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(19), // ␚, reduce: Expression
			nil,        // empty
			reduce(19), // int_lit, reduce: Expression
			reduce(19), // string_lit, reduce: Expression
			reduce(19), // true, reduce: Expression
			reduce(19), // false, reduce: Expression
			reduce(19), // id, reduce: Expression
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(19), // var, reduce: Expression
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(19), // if, reduce: Expression
			nil,        // else
			reduce(19), // while, reduce: Expression
			reduce(19), // func, reduce: Expression
			reduce(19), // return, reduce: Expression
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(20), // ␚, reduce: Expression
			nil,        // empty
			reduce(20), // int_lit, reduce: Expression
			reduce(20), // string_lit, reduce: Expression
			reduce(20), // true, reduce: Expression
			reduce(20), // false, reduce: Expression
			reduce(20), // id, reduce: Expression
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(20), // var, reduce: Expression
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(20), // if, reduce: Expression
			nil,        // else
			reduce(20), // while, reduce: Expression
			reduce(20), // func, reduce: Expression
			reduce(20), // return, reduce: Expression
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(21), // ␚, reduce: Expression
			nil,        // empty
			reduce(21), // int_lit, reduce: Expression
			reduce(21), // string_lit, reduce: Expression
			reduce(21), // true, reduce: Expression
			reduce(21), // false, reduce: Expression
			reduce(21), // id, reduce: Expression
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(21), // var, reduce: Expression
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(21), // if, reduce: Expression
			nil,        // else
			reduce(21), // while, reduce: Expression
			reduce(21), // func, reduce: Expression
			reduce(21), // return, reduce: Expression
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(22), // ␚, reduce: Expression
			nil,        // empty
			reduce(22), // int_lit, reduce: Expression
			reduce(22), // string_lit, reduce: Expression
			reduce(22), // true, reduce: Expression
			reduce(22), // false, reduce: Expression
			reduce(22), // id, reduce: Expression
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(22), // var, reduce: Expression
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(22), // if, reduce: Expression
			nil,        // else
			reduce(22), // while, reduce: Expression
			reduce(22), // func, reduce: Expression
			reduce(22), // return, reduce: Expression
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(23), // ␚, reduce: IntegerLiteral
			nil,        // empty
			reduce(23), // int_lit, reduce: IntegerLiteral
			reduce(23), // string_lit, reduce: IntegerLiteral
			reduce(23), // true, reduce: IntegerLiteral
			reduce(23), // false, reduce: IntegerLiteral
			reduce(23), // id, reduce: IntegerLiteral
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(23), // var, reduce: IntegerLiteral
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(23), // if, reduce: IntegerLiteral
			nil,        // else
			reduce(23), // while, reduce: IntegerLiteral
			reduce(23), // func, reduce: IntegerLiteral
			reduce(23), // return, reduce: IntegerLiteral
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(24), // ␚, reduce: StringLiteral
			nil,        // empty
			reduce(24), // int_lit, reduce: StringLiteral
			reduce(24), // string_lit, reduce: StringLiteral
			reduce(24), // true, reduce: StringLiteral
			reduce(24), // false, reduce: StringLiteral
			reduce(24), // id, reduce: StringLiteral
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(24), // var, reduce: StringLiteral
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(24), // if, reduce: StringLiteral
			nil,        // else
			reduce(24), // while, reduce: StringLiteral
			reduce(24), // func, reduce: StringLiteral
			reduce(24), // return, reduce: StringLiteral
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(25), // ␚, reduce: TrueLiteral
			nil,        // empty
			reduce(25), // int_lit, reduce: TrueLiteral
			reduce(25), // string_lit, reduce: TrueLiteral
			reduce(25), // true, reduce: TrueLiteral
			reduce(25), // false, reduce: TrueLiteral
			reduce(25), // id, reduce: TrueLiteral
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(25), // var, reduce: TrueLiteral
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(25), // if, reduce: TrueLiteral
			nil,        // else
			reduce(25), // while, reduce: TrueLiteral
			reduce(25), // func, reduce: TrueLiteral
			reduce(25), // return, reduce: TrueLiteral
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(26), // ␚, reduce: FalseLiteral
			nil,        // empty
			reduce(26), // int_lit, reduce: FalseLiteral
			reduce(26), // string_lit, reduce: FalseLiteral
			reduce(26), // true, reduce: FalseLiteral
			reduce(26), // false, reduce: FalseLiteral
			reduce(26), // id, reduce: FalseLiteral
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(26), // var, reduce: FalseLiteral
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(26), // if, reduce: FalseLiteral
			nil,        // else
			reduce(26), // while, reduce: FalseLiteral
			reduce(26), // func, reduce: FalseLiteral
			reduce(26), // return, reduce: FalseLiteral
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			nil,       // id
			shift(29), // (
			nil,       // )
			nil,       // ,
			nil,       // var
			shift(30), // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			shift(31), // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			shift(38), // int_lit
			shift(39), // string_lit
			shift(40), // true
			shift(41), // false
			shift(42), // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			shift(38), // int_lit
			shift(39), // string_lit
			shift(40), // true
			shift(41), // false
			shift(42), // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			shift(45), // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			shift(18), // int_lit
			shift(19), // string_lit
			shift(20), // true
			shift(21), // false
			shift(47), // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(5), // ␚, reduce: StatementList
			nil,       // empty
			reduce(5), // int_lit, reduce: StatementList
			reduce(5), // string_lit, reduce: StatementList
			reduce(5), // true, reduce: StatementList
			reduce(5), // false, reduce: StatementList
			reduce(5), // id, reduce: StatementList
			nil,       // (
			nil,       // )
			nil,       // ,
			reduce(5), // var, reduce: StatementList
			nil,       // =
			nil,       // {
			nil,       // }
			reduce(5), // if, reduce: StatementList
			nil,       // else
			reduce(5), // while, reduce: StatementList
			reduce(5), // func, reduce: StatementList
			reduce(5), // return, reduce: StatementList
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(54),  // int_lit
			shift(55),  // string_lit
			shift(56),  // true
			shift(57),  // false
			shift(58),  // id
			nil,        // (
			reduce(28), // ), reduce: Arguments
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			shift(18), // int_lit
			shift(19), // string_lit
			shift(20), // true
			shift(21), // false
			shift(47), // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			nil,       // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			shift(62), // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(35), // {, reduce: Condition
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(18), // {, reduce: Expression
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(19), // {, reduce: Expression
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(20), // {, reduce: Expression
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(21), // {, reduce: Expression
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(22), // {, reduce: Expression
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(23), // {, reduce: IntegerLiteral
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(24), // {, reduce: StringLiteral
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(25), // {, reduce: TrueLiteral
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(26), // {, reduce: FalseLiteral
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			nil,       // id
			shift(63), // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			nil,       // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			shift(65), // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			nil,       // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			shift(67), // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			nil,       // id
			shift(68), // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(40), // ␚, reduce: Return
			nil,        // empty
			reduce(40), // int_lit, reduce: Return
			reduce(40), // string_lit, reduce: Return
			reduce(40), // true, reduce: Return
			reduce(40), // false, reduce: Return
			reduce(40), // id, reduce: Return
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(40), // var, reduce: Return
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(40), // if, reduce: Return
			nil,        // else
			reduce(40), // while, reduce: Return
			reduce(40), // func, reduce: Return
			reduce(40), // return, reduce: Return
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			nil,       // id
			shift(29), // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			reduce(30), // ), reduce: ArgumentList
			reduce(30), // ,, reduce: ArgumentList
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			reduce(18), // ), reduce: Expression
			reduce(18), // ,, reduce: Expression
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			reduce(19), // ), reduce: Expression
			reduce(19), // ,, reduce: Expression
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			reduce(20), // ), reduce: Expression
			reduce(20), // ,, reduce: Expression
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			reduce(21), // ), reduce: Expression
			reduce(21), // ,, reduce: Expression
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			reduce(22), // ), reduce: Expression
			reduce(22), // ,, reduce: Expression
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			reduce(23), // ), reduce: IntegerLiteral
			reduce(23), // ,, reduce: IntegerLiteral
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			reduce(24), // ), reduce: StringLiteral
			reduce(24), // ,, reduce: StringLiteral
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			reduce(25), // ), reduce: TrueLiteral
			reduce(25), // ,, reduce: TrueLiteral
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			reduce(26), // ), reduce: FalseLiteral
			reduce(26), // ,, reduce: FalseLiteral
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			nil,       // id
			shift(69), // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			nil,       // id
			nil,       // (
			shift(70), // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			reduce(29), // ), reduce: Arguments
			shift(71),  // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(33), // ␚, reduce: Assign
			nil,        // empty
			reduce(33), // int_lit, reduce: Assign
			reduce(33), // string_lit, reduce: Assign
			reduce(33), // true, reduce: Assign
			reduce(33), // false, reduce: Assign
			reduce(33), // id, reduce: Assign
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(33), // var, reduce: Assign
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(33), // if, reduce: Assign
			nil,        // else
			reduce(33), // while, reduce: Assign
			reduce(33), // func, reduce: Assign
			reduce(33), // return, reduce: Assign
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			shift(18), // int_lit
			shift(19), // string_lit
			shift(20), // true
			shift(21), // false
			shift(47), // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(54),  // int_lit
			shift(55),  // string_lit
			shift(56),  // true
			shift(57),  // false
			shift(58),  // id
			nil,        // (
			reduce(28), // ), reduce: Arguments
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(36), // ␚, reduce: If
			nil,        // empty
			reduce(36), // int_lit, reduce: If
			reduce(36), // string_lit, reduce: If
			reduce(36), // true, reduce: If
			reduce(36), // false, reduce: If
			reduce(36), // id, reduce: If
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(36), // var, reduce: If
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(36), // if, reduce: If
			shift(74),  // else
			reduce(36), // while, reduce: If
			reduce(36), // func, reduce: If
			reduce(36), // return, reduce: If
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(91),  // int_lit
			shift(92),  // string_lit
			shift(93),  // true
			shift(94),  // false
			shift(95),  // id
			nil,        // (
			nil,        // )
			nil,        // ,
			shift(96),  // var
			nil,        // =
			nil,        // {
			reduce(2),  // }, reduce: Statements
			shift(97),  // if
			nil,        // else
			shift(98),  // while
			shift(99),  // func
			shift(100), // return
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(38), // ␚, reduce: While
			nil,        // empty
			reduce(38), // int_lit, reduce: While
			reduce(38), // string_lit, reduce: While
			reduce(38), // true, reduce: While
			reduce(38), // false, reduce: While
			reduce(38), // id, reduce: While
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(38), // var, reduce: While
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(38), // if, reduce: While
			nil,        // else
			reduce(38), // while, reduce: While
			reduce(38), // func, reduce: While
			reduce(38), // return, reduce: While
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(91),  // int_lit
			shift(92),  // string_lit
			shift(93),  // true
			shift(94),  // false
			shift(95),  // id
			nil,        // (
			nil,        // )
			nil,        // ,
			shift(96),  // var
			nil,        // =
			nil,        // {
			reduce(2),  // }, reduce: Statements
			shift(97),  // if
			nil,        // else
			shift(98),  // while
			shift(99),  // func
			shift(100), // return
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			shift(102), // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(54),  // int_lit
			shift(55),  // string_lit
			shift(56),  // true
			shift(57),  // false
			shift(58),  // id
			nil,        // (
			reduce(28), // ), reduce: Arguments
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(27), // ␚, reduce: FunctionCall
			nil,        // empty
			reduce(27), // int_lit, reduce: FunctionCall
			reduce(27), // string_lit, reduce: FunctionCall
			reduce(27), // true, reduce: FunctionCall
			reduce(27), // false, reduce: FunctionCall
			reduce(27), // id, reduce: FunctionCall
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(27), // var, reduce: FunctionCall
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(27), // if, reduce: FunctionCall
			nil,        // else
			reduce(27), // while, reduce: FunctionCall
			reduce(27), // func, reduce: FunctionCall
			reduce(27), // return, reduce: FunctionCall
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			shift(54), // int_lit
			shift(55), // string_lit
			shift(56), // true
			shift(57), // false
			shift(58), // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(32), // ␚, reduce: Declare
			nil,        // empty
			reduce(32), // int_lit, reduce: Declare
			reduce(32), // string_lit, reduce: Declare
			reduce(32), // true, reduce: Declare
			reduce(32), // false, reduce: Declare
			reduce(32), // id, reduce: Declare
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(32), // var, reduce: Declare
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(32), // if, reduce: Declare
			nil,        // else
			reduce(32), // while, reduce: Declare
			reduce(32), // func, reduce: Declare
			reduce(32), // return, reduce: Declare
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			shift(105), // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			nil,       // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			shift(67), // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			shift(107), // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(91),  // int_lit
			shift(92),  // string_lit
			shift(93),  // true
			shift(94),  // false
			shift(95),  // id
			nil,        // (
			nil,        // )
			nil,        // ,
			shift(96),  // var
			nil,        // =
			nil,        // {
			reduce(3),  // }, reduce: Statements
			shift(97),  // if
			nil,        // else
			shift(98),  // while
			shift(99),  // func
			shift(100), // return
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			reduce(4), // int_lit, reduce: StatementList
			reduce(4), // string_lit, reduce: StatementList
			reduce(4), // true, reduce: StatementList
			reduce(4), // false, reduce: StatementList
			reduce(4), // id, reduce: StatementList
			nil,       // (
			nil,       // )
			nil,       // ,
			reduce(4), // var, reduce: StatementList
			nil,       // =
			nil,       // {
			reduce(4), // }, reduce: StatementList
			reduce(4), // if, reduce: StatementList
			nil,       // else
			reduce(4), // while, reduce: StatementList
			reduce(4), // func, reduce: StatementList
			reduce(4), // return, reduce: StatementList
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			reduce(6), // int_lit, reduce: Statement
			reduce(6), // string_lit, reduce: Statement
			reduce(6), // true, reduce: Statement
			reduce(6), // false, reduce: Statement
			reduce(6), // id, reduce: Statement
			nil,       // (
			nil,       // )
			nil,       // ,
			reduce(6), // var, reduce: Statement
			nil,       // =
			nil,       // {
			reduce(6), // }, reduce: Statement
			reduce(6), // if, reduce: Statement
			nil,       // else
			reduce(6), // while, reduce: Statement
			reduce(6), // func, reduce: Statement
			reduce(6), // return, reduce: Statement
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			reduce(7), // int_lit, reduce: Statement
			reduce(7), // string_lit, reduce: Statement
			reduce(7), // true, reduce: Statement
			reduce(7), // false, reduce: Statement
			reduce(7), // id, reduce: Statement
			nil,       // (
			nil,       // )
			nil,       // ,
			reduce(7), // var, reduce: Statement
			nil,       // =
			nil,       // {
			reduce(7), // }, reduce: Statement
			reduce(7), // if, reduce: Statement
			nil,       // else
			reduce(7), // while, reduce: Statement
			reduce(7), // func, reduce: Statement
			reduce(7), // return, reduce: Statement
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			reduce(8), // int_lit, reduce: Statement
			reduce(8), // string_lit, reduce: Statement
			reduce(8), // true, reduce: Statement
			reduce(8), // false, reduce: Statement
			reduce(8), // id, reduce: Statement
			nil,       // (
			nil,       // )
			nil,       // ,
			reduce(8), // var, reduce: Statement
			nil,       // =
			nil,       // {
			reduce(8), // }, reduce: Statement
			reduce(8), // if, reduce: Statement
			nil,       // else
			reduce(8), // while, reduce: Statement
			reduce(8), // func, reduce: Statement
			reduce(8), // return, reduce: Statement
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			reduce(9), // int_lit, reduce: Statement
			reduce(9), // string_lit, reduce: Statement
			reduce(9), // true, reduce: Statement
			reduce(9), // false, reduce: Statement
			reduce(9), // id, reduce: Statement
			nil,       // (
			nil,       // )
			nil,       // ,
			reduce(9), // var, reduce: Statement
			nil,       // =
			nil,       // {
			reduce(9), // }, reduce: Statement
			reduce(9), // if, reduce: Statement
			nil,       // else
			reduce(9), // while, reduce: Statement
			reduce(9), // func, reduce: Statement
			reduce(9), // return, reduce: Statement
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(10), // int_lit, reduce: Statement
			reduce(10), // string_lit, reduce: Statement
			reduce(10), // true, reduce: Statement
			reduce(10), // false, reduce: Statement
			reduce(10), // id, reduce: Statement
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(10), // var, reduce: Statement
			nil,        // =
			nil,        // {
			reduce(10), // }, reduce: Statement
			reduce(10), // if, reduce: Statement
			nil,        // else
			reduce(10), // while, reduce: Statement
			reduce(10), // func, reduce: Statement
			reduce(10), // return, reduce: Statement
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(11), // int_lit, reduce: Statement
			reduce(11), // string_lit, reduce: Statement
			reduce(11), // true, reduce: Statement
			reduce(11), // false, reduce: Statement
			reduce(11), // id, reduce: Statement
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(11), // var, reduce: Statement
			nil,        // =
			nil,        // {
			reduce(11), // }, reduce: Statement
			reduce(11), // if, reduce: Statement
			nil,        // else
			reduce(11), // while, reduce: Statement
			reduce(11), // func, reduce: Statement
			reduce(11), // return, reduce: Statement
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(12), // int_lit, reduce: Statement
			reduce(12), // string_lit, reduce: Statement
			reduce(12), // true, reduce: Statement
			reduce(12), // false, reduce: Statement
			reduce(12), // id, reduce: Statement
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(12), // var, reduce: Statement
			nil,        // =
			nil,        // {
			reduce(12), // }, reduce: Statement
			reduce(12), // if, reduce: Statement
			nil,        // else
			reduce(12), // while, reduce: Statement
			reduce(12), // func, reduce: Statement
			reduce(12), // return, reduce: Statement
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(13), // int_lit, reduce: Statement
			reduce(13), // string_lit, reduce: Statement
			reduce(13), // true, reduce: Statement
			reduce(13), // false, reduce: Statement
			reduce(13), // id, reduce: Statement
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(13), // var, reduce: Statement
			nil,        // =
			nil,        // {
			reduce(13), // }, reduce: Statement
			reduce(13), // if, reduce: Statement
			nil,        // else
			reduce(13), // while, reduce: Statement
			reduce(13), // func, reduce: Statement
			reduce(13), // return, reduce: Statement
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(18), // int_lit, reduce: Expression
			reduce(18), // string_lit, reduce: Expression
			reduce(18), // true, reduce: Expression
			reduce(18), // false, reduce: Expression
			reduce(18), // id, reduce: Expression
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(18), // var, reduce: Expression
			nil,        // =
			nil,        // {
			reduce(18), // }, reduce: Expression
			reduce(18), // if, reduce: Expression
			nil,        // else
			reduce(18), // while, reduce: Expression
			reduce(18), // func, reduce: Expression
			reduce(18), // return, reduce: Expression
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(19), // int_lit, reduce: Expression
			reduce(19), // string_lit, reduce: Expression
			reduce(19), // true, reduce: Expression
			reduce(19), // false, reduce: Expression
			reduce(19), // id, reduce: Expression
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(19), // var, reduce: Expression
			nil,        // =
			nil,        // {
			reduce(19), // }, reduce: Expression
			reduce(19), // if, reduce: Expression
			nil,        // else
			reduce(19), // while, reduce: Expression
			reduce(19), // func, reduce: Expression
			reduce(19), // return, reduce: Expression
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(20), // int_lit, reduce: Expression
			reduce(20), // string_lit, reduce: Expression
			reduce(20), // true, reduce: Expression
			reduce(20), // false, reduce: Expression
			reduce(20), // id, reduce: Expression
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(20), // var, reduce: Expression
			nil,        // =
			nil,        // {
			reduce(20), // }, reduce: Expression
			reduce(20), // if, reduce: Expression
			nil,        // else
			reduce(20), // while, reduce: Expression
			reduce(20), // func, reduce: Expression
			reduce(20), // return, reduce: Expression
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(21), // int_lit, reduce: Expression
			reduce(21), // string_lit, reduce: Expression
			reduce(21), // true, reduce: Expression
			reduce(21), // false, reduce: Expression
			reduce(21), // id, reduce: Expression
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(21), // var, reduce: Expression
			nil,        // =
			nil,        // {
			reduce(21), // }, reduce: Expression
			reduce(21), // if, reduce: Expression
			nil,        // else
			reduce(21), // while, reduce: Expression
			reduce(21), // func, reduce: Expression
			reduce(21), // return, reduce: Expression
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(22), // int_lit, reduce: Expression
			reduce(22), // string_lit, reduce: Expression
			reduce(22), // true, reduce: Expression
			reduce(22), // false, reduce: Expression
			reduce(22), // id, reduce: Expression
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(22), // var, reduce: Expression
			nil,        // =
			nil,        // {
			reduce(22), // }, reduce: Expression
			reduce(22), // if, reduce: Expression
			nil,        // else
			reduce(22), // while, reduce: Expression
			reduce(22), // func, reduce: Expression
			reduce(22), // return, reduce: Expression
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(23), // int_lit, reduce: IntegerLiteral
			reduce(23), // string_lit, reduce: IntegerLiteral
			reduce(23), // true, reduce: IntegerLiteral
			reduce(23), // false, reduce: IntegerLiteral
			reduce(23), // id, reduce: IntegerLiteral
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(23), // var, reduce: IntegerLiteral
			nil,        // =
			nil,        // {
			reduce(23), // }, reduce: IntegerLiteral
			reduce(23), // if, reduce: IntegerLiteral
			nil,        // else
			reduce(23), // while, reduce: IntegerLiteral
			reduce(23), // func, reduce: IntegerLiteral
			reduce(23), // return, reduce: IntegerLiteral
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(24), // int_lit, reduce: StringLiteral
			reduce(24), // string_lit, reduce: StringLiteral
			reduce(24), // true, reduce: StringLiteral
			reduce(24), // false, reduce: StringLiteral
			reduce(24), // id, reduce: StringLiteral
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(24), // var, reduce: StringLiteral
			nil,        // =
			nil,        // {
			reduce(24), // }, reduce: StringLiteral
			reduce(24), // if, reduce: StringLiteral
			nil,        // else
			reduce(24), // while, reduce: StringLiteral
			reduce(24), // func, reduce: StringLiteral
			reduce(24), // return, reduce: StringLiteral
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(25), // int_lit, reduce: TrueLiteral
			reduce(25), // string_lit, reduce: TrueLiteral
			reduce(25), // true, reduce: TrueLiteral
			reduce(25), // false, reduce: TrueLiteral
			reduce(25), // id, reduce: TrueLiteral
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(25), // var, reduce: TrueLiteral
			nil,        // =
			nil,        // {
			reduce(25), // }, reduce: TrueLiteral
			reduce(25), // if, reduce: TrueLiteral
			nil,        // else
			reduce(25), // while, reduce: TrueLiteral
			reduce(25), // func, reduce: TrueLiteral
			reduce(25), // return, reduce: TrueLiteral
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(26), // int_lit, reduce: FalseLiteral
			reduce(26), // string_lit, reduce: FalseLiteral
			reduce(26), // true, reduce: FalseLiteral
			reduce(26), // false, reduce: FalseLiteral
			reduce(26), // id, reduce: FalseLiteral
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(26), // var, reduce: FalseLiteral
			nil,        // =
			nil,        // {
			reduce(26), // }, reduce: FalseLiteral
			reduce(26), // if, reduce: FalseLiteral
			nil,        // else
			reduce(26), // while, reduce: FalseLiteral
			reduce(26), // func, reduce: FalseLiteral
			reduce(26), // return, reduce: FalseLiteral
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			shift(109), // (
			nil,        // )
			nil,        // ,
			nil,        // var
			shift(110), // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			shift(111), // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			shift(38), // int_lit
			shift(39), // string_lit
			shift(40), // true
			shift(41), // false
			shift(42), // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			shift(38), // int_lit
			shift(39), // string_lit
			shift(40), // true
			shift(41), // false
			shift(42), // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			nil,       // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			shift(114), // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(91),  // int_lit
			shift(92),  // string_lit
			shift(93),  // true
			shift(94),  // false
			shift(116), // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			shift(117), // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // true
			nil,       // false
			nil,       // id
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // var
			nil,       // =
			shift(67), // {
			nil,       // }
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // func
			nil,       // return
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			shift(119), // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			reduce(31), // ), reduce: ArgumentList
			reduce(31), // ,, reduce: ArgumentList
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			reduce(27), // {, reduce: FunctionCall
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(37), // ␚, reduce: IfElse
			nil,        // empty
			reduce(37), // int_lit, reduce: IfElse
			reduce(37), // string_lit, reduce: IfElse
			reduce(37), // true, reduce: IfElse
			reduce(37), // false, reduce: IfElse
			reduce(37), // id, reduce: IfElse
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(37), // var, reduce: IfElse
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(37), // if, reduce: IfElse
			nil,        // else
			reduce(37), // while, reduce: IfElse
			reduce(37), // func, reduce: IfElse
			reduce(37), // return, reduce: IfElse
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(34), // ␚, reduce: Block
			nil,        // empty
			reduce(34), // int_lit, reduce: Block
			reduce(34), // string_lit, reduce: Block
			reduce(34), // true, reduce: Block
			reduce(34), // false, reduce: Block
			reduce(34), // id, reduce: Block
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(34), // var, reduce: Block
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(34), // if, reduce: Block
			reduce(34), // else, reduce: Block
			reduce(34), // while, reduce: Block
			reduce(34), // func, reduce: Block
			reduce(34), // return, reduce: Block
		},
	},
	actionRow{ // S108
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			reduce(5), // int_lit, reduce: StatementList
			reduce(5), // string_lit, reduce: StatementList
			reduce(5), // true, reduce: StatementList
			reduce(5), // false, reduce: StatementList
			reduce(5), // id, reduce: StatementList
			nil,       // (
			nil,       // )
			nil,       // ,
			reduce(5), // var, reduce: StatementList
			nil,       // =
			nil,       // {
			reduce(5), // }, reduce: StatementList
			reduce(5), // if, reduce: StatementList
			nil,       // else
			reduce(5), // while, reduce: StatementList
			reduce(5), // func, reduce: StatementList
			reduce(5), // return, reduce: StatementList
		},
	},
	actionRow{ // S109
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(54),  // int_lit
			shift(55),  // string_lit
			shift(56),  // true
			shift(57),  // false
			shift(58),  // id
			nil,        // (
			reduce(28), // ), reduce: Arguments
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S110
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(91),  // int_lit
			shift(92),  // string_lit
			shift(93),  // true
			shift(94),  // false
			shift(116), // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S111
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			shift(122), // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S112
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			shift(124), // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S113
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			shift(126), // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S114
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			shift(127), // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S115
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(40), // int_lit, reduce: Return
			reduce(40), // string_lit, reduce: Return
			reduce(40), // true, reduce: Return
			reduce(40), // false, reduce: Return
			reduce(40), // id, reduce: Return
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(40), // var, reduce: Return
			nil,        // =
			nil,        // {
			reduce(40), // }, reduce: Return
			reduce(40), // if, reduce: Return
			nil,        // else
			reduce(40), // while, reduce: Return
			reduce(40), // func, reduce: Return
			reduce(40), // return, reduce: Return
		},
	},
	actionRow{ // S116
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			shift(109), // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S117
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(34), // ␚, reduce: Block
			nil,        // empty
			reduce(34), // int_lit, reduce: Block
			reduce(34), // string_lit, reduce: Block
			reduce(34), // true, reduce: Block
			reduce(34), // false, reduce: Block
			reduce(34), // id, reduce: Block
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(34), // var, reduce: Block
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(34), // if, reduce: Block
			nil,        // else
			reduce(34), // while, reduce: Block
			reduce(34), // func, reduce: Block
			reduce(34), // return, reduce: Block
		},
	},
	actionRow{ // S118
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(39), // ␚, reduce: FunctionDefine
			nil,        // empty
			reduce(39), // int_lit, reduce: FunctionDefine
			reduce(39), // string_lit, reduce: FunctionDefine
			reduce(39), // true, reduce: FunctionDefine
			reduce(39), // false, reduce: FunctionDefine
			reduce(39), // id, reduce: FunctionDefine
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(39), // var, reduce: FunctionDefine
			nil,        // =
			nil,        // {
			nil,        // }
			reduce(39), // if, reduce: FunctionDefine
			nil,        // else
			reduce(39), // while, reduce: FunctionDefine
			reduce(39), // func, reduce: FunctionDefine
			reduce(39), // return, reduce: FunctionDefine
		},
	},
	actionRow{ // S119
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			reduce(27), // ), reduce: FunctionCall
			reduce(27), // ,, reduce: FunctionCall
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S120
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			shift(128), // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S121
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(33), // int_lit, reduce: Assign
			reduce(33), // string_lit, reduce: Assign
			reduce(33), // true, reduce: Assign
			reduce(33), // false, reduce: Assign
			reduce(33), // id, reduce: Assign
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(33), // var, reduce: Assign
			nil,        // =
			nil,        // {
			reduce(33), // }, reduce: Assign
			reduce(33), // if, reduce: Assign
			nil,        // else
			reduce(33), // while, reduce: Assign
			reduce(33), // func, reduce: Assign
			reduce(33), // return, reduce: Assign
		},
	},
	actionRow{ // S122
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(91),  // int_lit
			shift(92),  // string_lit
			shift(93),  // true
			shift(94),  // false
			shift(116), // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S123
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(36), // int_lit, reduce: If
			reduce(36), // string_lit, reduce: If
			reduce(36), // true, reduce: If
			reduce(36), // false, reduce: If
			reduce(36), // id, reduce: If
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(36), // var, reduce: If
			nil,        // =
			nil,        // {
			reduce(36), // }, reduce: If
			reduce(36), // if, reduce: If
			shift(130), // else
			reduce(36), // while, reduce: If
			reduce(36), // func, reduce: If
			reduce(36), // return, reduce: If
		},
	},
	actionRow{ // S124
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(91),  // int_lit
			shift(92),  // string_lit
			shift(93),  // true
			shift(94),  // false
			shift(95),  // id
			nil,        // (
			nil,        // )
			nil,        // ,
			shift(96),  // var
			nil,        // =
			nil,        // {
			reduce(2),  // }, reduce: Statements
			shift(97),  // if
			nil,        // else
			shift(98),  // while
			shift(99),  // func
			shift(100), // return
		},
	},
	actionRow{ // S125
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(38), // int_lit, reduce: While
			reduce(38), // string_lit, reduce: While
			reduce(38), // true, reduce: While
			reduce(38), // false, reduce: While
			reduce(38), // id, reduce: While
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(38), // var, reduce: While
			nil,        // =
			nil,        // {
			reduce(38), // }, reduce: While
			reduce(38), // if, reduce: While
			nil,        // else
			reduce(38), // while, reduce: While
			reduce(38), // func, reduce: While
			reduce(38), // return, reduce: While
		},
	},
	actionRow{ // S126
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(91),  // int_lit
			shift(92),  // string_lit
			shift(93),  // true
			shift(94),  // false
			shift(95),  // id
			nil,        // (
			nil,        // )
			nil,        // ,
			shift(96),  // var
			nil,        // =
			nil,        // {
			reduce(2),  // }, reduce: Statements
			shift(97),  // if
			nil,        // else
			shift(98),  // while
			shift(99),  // func
			shift(100), // return
		},
	},
	actionRow{ // S127
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			shift(133), // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S128
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(27), // int_lit, reduce: FunctionCall
			reduce(27), // string_lit, reduce: FunctionCall
			reduce(27), // true, reduce: FunctionCall
			reduce(27), // false, reduce: FunctionCall
			reduce(27), // id, reduce: FunctionCall
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(27), // var, reduce: FunctionCall
			nil,        // =
			nil,        // {
			reduce(27), // }, reduce: FunctionCall
			reduce(27), // if, reduce: FunctionCall
			nil,        // else
			reduce(27), // while, reduce: FunctionCall
			reduce(27), // func, reduce: FunctionCall
			reduce(27), // return, reduce: FunctionCall
		},
	},
	actionRow{ // S129
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(32), // int_lit, reduce: Declare
			reduce(32), // string_lit, reduce: Declare
			reduce(32), // true, reduce: Declare
			reduce(32), // false, reduce: Declare
			reduce(32), // id, reduce: Declare
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(32), // var, reduce: Declare
			nil,        // =
			nil,        // {
			reduce(32), // }, reduce: Declare
			reduce(32), // if, reduce: Declare
			nil,        // else
			reduce(32), // while, reduce: Declare
			reduce(32), // func, reduce: Declare
			reduce(32), // return, reduce: Declare
		},
	},
	actionRow{ // S130
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			shift(126), // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S131
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			shift(135), // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S132
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			nil,        // {
			shift(136), // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S133
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // true
			nil,        // false
			nil,        // id
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // var
			nil,        // =
			shift(126), // {
			nil,        // }
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // func
			nil,        // return
		},
	},
	actionRow{ // S134
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(37), // int_lit, reduce: IfElse
			reduce(37), // string_lit, reduce: IfElse
			reduce(37), // true, reduce: IfElse
			reduce(37), // false, reduce: IfElse
			reduce(37), // id, reduce: IfElse
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(37), // var, reduce: IfElse
			nil,        // =
			nil,        // {
			reduce(37), // }, reduce: IfElse
			reduce(37), // if, reduce: IfElse
			nil,        // else
			reduce(37), // while, reduce: IfElse
			reduce(37), // func, reduce: IfElse
			reduce(37), // return, reduce: IfElse
		},
	},
	actionRow{ // S135
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(34), // int_lit, reduce: Block
			reduce(34), // string_lit, reduce: Block
			reduce(34), // true, reduce: Block
			reduce(34), // false, reduce: Block
			reduce(34), // id, reduce: Block
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(34), // var, reduce: Block
			nil,        // =
			nil,        // {
			reduce(34), // }, reduce: Block
			reduce(34), // if, reduce: Block
			reduce(34), // else, reduce: Block
			reduce(34), // while, reduce: Block
			reduce(34), // func, reduce: Block
			reduce(34), // return, reduce: Block
		},
	},
	actionRow{ // S136
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(34), // int_lit, reduce: Block
			reduce(34), // string_lit, reduce: Block
			reduce(34), // true, reduce: Block
			reduce(34), // false, reduce: Block
			reduce(34), // id, reduce: Block
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(34), // var, reduce: Block
			nil,        // =
			nil,        // {
			reduce(34), // }, reduce: Block
			reduce(34), // if, reduce: Block
			nil,        // else
			reduce(34), // while, reduce: Block
			reduce(34), // func, reduce: Block
			reduce(34), // return, reduce: Block
		},
	},
	actionRow{ // S137
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			reduce(39), // int_lit, reduce: FunctionDefine
			reduce(39), // string_lit, reduce: FunctionDefine
			reduce(39), // true, reduce: FunctionDefine
			reduce(39), // false, reduce: FunctionDefine
			reduce(39), // id, reduce: FunctionDefine
			nil,        // (
			nil,        // )
			nil,        // ,
			reduce(39), // var, reduce: FunctionDefine
			nil,        // =
			nil,        // {
			reduce(39), // }, reduce: FunctionDefine
			reduce(39), // if, reduce: FunctionDefine
			nil,        // else
			reduce(39), // while, reduce: FunctionDefine
			reduce(39), // func, reduce: FunctionDefine
			reduce(39), // return, reduce: FunctionDefine
		},
	},
}
