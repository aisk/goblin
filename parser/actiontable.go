// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(2), // ␚, reduce: Statements
			nil,       // empty
			shift(9),  // int_lit
			shift(10), // string_lit
			shift(11), // id
			nil,       // (
			nil,       // )
			nil,       // ,
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // ␚
			nil,          // empty
			nil,          // int_lit
			nil,          // string_lit
			nil,          // id
			nil,          // (
			nil,          // )
			nil,          // ,
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // ␚, reduce: Module
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // id
			nil,       // (
			nil,       // )
			nil,       // ,
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(3), // ␚, reduce: Statements
			nil,       // empty
			shift(9),  // int_lit
			shift(10), // string_lit
			shift(11), // id
			nil,       // (
			nil,       // )
			nil,       // ,
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(4), // ␚, reduce: StatementList
			nil,       // empty
			reduce(4), // int_lit, reduce: StatementList
			reduce(4), // string_lit, reduce: StatementList
			reduce(4), // id, reduce: StatementList
			nil,       // (
			nil,       // )
			nil,       // ,
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(6), // ␚, reduce: Statement
			nil,       // empty
			reduce(6), // int_lit, reduce: Statement
			reduce(6), // string_lit, reduce: Statement
			reduce(6), // id, reduce: Statement
			nil,       // (
			nil,       // )
			nil,       // ,
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(11), // ␚, reduce: Expression
			nil,        // empty
			reduce(11), // int_lit, reduce: Expression
			reduce(11), // string_lit, reduce: Expression
			reduce(11), // id, reduce: Expression
			nil,        // (
			nil,        // )
			nil,        // ,
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(12), // ␚, reduce: Expression
			nil,        // empty
			reduce(12), // int_lit, reduce: Expression
			reduce(12), // string_lit, reduce: Expression
			reduce(12), // id, reduce: Expression
			nil,        // (
			nil,        // )
			nil,        // ,
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(13), // ␚, reduce: Expression
			nil,        // empty
			reduce(13), // int_lit, reduce: Expression
			reduce(13), // string_lit, reduce: Expression
			reduce(13), // id, reduce: Expression
			nil,        // (
			nil,        // )
			nil,        // ,
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(14), // ␚, reduce: IntegerLiteral
			nil,        // empty
			reduce(14), // int_lit, reduce: IntegerLiteral
			reduce(14), // string_lit, reduce: IntegerLiteral
			reduce(14), // id, reduce: IntegerLiteral
			nil,        // (
			nil,        // )
			nil,        // ,
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(15), // ␚, reduce: StringLiteral
			nil,        // empty
			reduce(15), // int_lit, reduce: StringLiteral
			reduce(15), // string_lit, reduce: StringLiteral
			reduce(15), // id, reduce: StringLiteral
			nil,        // (
			nil,        // )
			nil,        // ,
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // id
			shift(13), // (
			nil,       // )
			nil,       // ,
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(5), // ␚, reduce: StatementList
			nil,       // empty
			reduce(5), // int_lit, reduce: StatementList
			reduce(5), // string_lit, reduce: StatementList
			reduce(5), // id, reduce: StatementList
			nil,       // (
			nil,       // )
			nil,       // ,
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(18),  // int_lit
			shift(19),  // string_lit
			shift(20),  // id
			nil,        // (
			reduce(17), // ), reduce: Arguments
			nil,        // ,
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // id
			nil,        // (
			reduce(19), // ), reduce: ArgumentList
			reduce(19), // ,, reduce: ArgumentList
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // id
			nil,        // (
			reduce(11), // ), reduce: Expression
			reduce(11), // ,, reduce: Expression
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // id
			nil,        // (
			reduce(12), // ), reduce: Expression
			reduce(12), // ,, reduce: Expression
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // id
			nil,        // (
			reduce(13), // ), reduce: Expression
			reduce(13), // ,, reduce: Expression
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // id
			nil,        // (
			reduce(14), // ), reduce: IntegerLiteral
			reduce(14), // ,, reduce: IntegerLiteral
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // id
			nil,        // (
			reduce(15), // ), reduce: StringLiteral
			reduce(15), // ,, reduce: StringLiteral
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // id
			shift(23), // (
			nil,       // )
			nil,       // ,
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // id
			nil,       // (
			shift(24), // )
			nil,       // ,
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // id
			nil,        // (
			reduce(18), // ), reduce: Arguments
			shift(25),  // ,
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			shift(18),  // int_lit
			shift(19),  // string_lit
			shift(20),  // id
			nil,        // (
			reduce(17), // ), reduce: Arguments
			nil,        // ,
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(16), // ␚, reduce: FunctionCall
			nil,        // empty
			reduce(16), // int_lit, reduce: FunctionCall
			reduce(16), // string_lit, reduce: FunctionCall
			reduce(16), // id, reduce: FunctionCall
			nil,        // (
			nil,        // )
			nil,        // ,
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			shift(18), // int_lit
			shift(19), // string_lit
			shift(20), // id
			nil,       // (
			nil,       // )
			nil,       // ,
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // int_lit
			nil,       // string_lit
			nil,       // id
			nil,       // (
			shift(28), // )
			nil,       // ,
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // id
			nil,        // (
			reduce(20), // ), reduce: ArgumentList
			reduce(20), // ,, reduce: ArgumentList
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // int_lit
			nil,        // string_lit
			nil,        // id
			nil,        // (
			reduce(16), // ), reduce: FunctionCall
			reduce(16), // ,, reduce: FunctionCall
		},
	},
}
